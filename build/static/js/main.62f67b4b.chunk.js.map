{"version":3,"sources":["features/productList/ProductListReducer/types.ts","features/productList/ProductListReducer/selectors.ts","config/config.ts","features/productList/ProductListReducer/slice.ts","features/productList/ProductListReducer/workers.ts","store/auth/types.ts","features/productList/ProductListReducer/index.ts","utils/logger.ts","api/transport/transport.ts","store/helpers.ts","store/auth/selectors.ts","store/auth/slice.ts","store/auth/workers.ts","store/auth/index.ts","store/sagas.ts","types/helpers/helpers.ts","features/productList/types.ts","store/app/selectors.ts","store/app/slice.ts","store/app/index.ts","features/productList/ProductListReducer/helpers.ts","features/productList/ProductListReducer/sagas.ts","features/product/productReducer/selectors.ts","features/product/productReducer/types.ts","features/product/productReducer/slice.ts","features/product/productReducer/workers.ts","features/categoryList/categoryListReducer/types.ts","features/product/productReducer/index.ts","i18n/useAppTranslation.ts","features/product/types.ts","components/PageTitle/PageTitle.tsx","pages/HomePage/HomePage.tsx","store/hooks.ts","theme/styled.tsx","components/RequestErrorView/hooks.ts","components/RequestErrorView/RequestErrorView.tsx","pages/SignInPage/SignInPage.tsx","components/DebouncedInput/DebouncedInput.tsx","components/DataGrid/components/DataGridRow/components/CellValue/CellValue.tsx","components/DataGrid/components/DataGridRow/DataGridRow.tsx","components/DataGrid/components/DataGridHeadRow/DataGridHeadRow.tsx","components/DataGrid/DataGrid.tsx","components/EntityListForm/EntityListForm.tsx","components/EntityListFormSkeleton/EntityListFormSkeleton.tsx","components/ActionRowPanelDefault/ActionRowPanelDefault.tsx","features/productList/ProductListForm/ProductListForm.tsx","features/productList/ProductListForm/hooks.ts","features/categoryList/CategoryListForm/hooks.ts","components/EntityListSubform/EntityListSubform.tsx","components/EntityListSubform/helpers.ts","components/AppModal/AppModal.tsx","features/categoryList/categoryListReducer/selectors.ts","features/categoryList/categoryListReducer/slice.ts","features/categoryList/categoryListReducer/workers.ts","features/category/categoryReducer/types.ts","features/categoryList/categoryListReducer/index.ts","features/categoryList/CategoryListForm/CategoryListForm.tsx","features/product/ProductForm/components/CategoryListSubform/CategoryListSubform.tsx","features/product/ProductForm/ProductForm.tsx","features/product/ProductForm/helpers.ts","features/category/categoryReducer/slice.ts","features/category/categoryReducer/selectors.ts","features/category/categoryReducer/workers.ts","features/signUp/signUpReducer/types.ts","features/category/categoryReducer/index.ts","features/category/types.ts","features/category/CategoryForm/CategoryForm.tsx","features/category/CategoryForm/helpers.ts","features/signUp/types.ts","features/signUp/signUpReducer/slice.ts","features/signUp/signUpReducer/workers.ts","features/signUp/signUpReducer/selectors.ts","features/signUp/signUpReducer/index.ts","features/signUp/SignUpForm/QueryFieldsError/QueryFieldsError.tsx","features/signUp/SignUpForm/SignUpForm.tsx","router/routes.ts","pages/SignInPage/hooks.ts","pages/SignUpPage/SignUpPage.tsx","pages/ProductListPage/ProductListPage.tsx","pages/ProductPage/ProductPage.tsx","pages/CategoryListPage/CategoryListPage.tsx","pages/CategoryPage/CategoryPage.tsx","pages/RouteNotFoundPage/RouteNotFoundPage.tsx","router/helpers.ts","router/RedirectExecutor.tsx","router/RoutesStructure.tsx","features/product/productReducer/helpers.ts","features/product/productReducer/sagas.ts","features/categoryList/types.ts","features/categoryList/categoryListReducer/helpers.ts","features/categoryList/categoryListReducer/sagas.ts","features/category/categoryReducer/helpers.ts","features/category/categoryReducer/sagas.ts","features/signUp/signUpReducer/helpers.ts","features/signUp/signUpReducer/sagas.ts","types/userData.ts","store/auth/helpers.ts","store/auth/sagas.ts","store/store.ts","UI/ProgressBar/ProgressBar.tsx","components/ThemeModeSwitcher/ThemeModeSwitcher.tsx","components/User/UserComponent.tsx","components/User/User.tsx","i18n/index.ts","i18n/en.ts","i18n/ru.ts","components/LangSwitcher/LangSwitcher.tsx","components/MenuBtn/MenuBtn.tsx","components/AppHeader/AppHeader.tsx","components/AppFooter/AppFooter.tsx","theme/GlobalStyle.tsx","components/AppNav/NavLink/NavLink.tsx","components/AppNav/AppNav.tsx","components/NavBlock/NavBlock.tsx","UI/SmallWidthChecker/SmallWidthChecker.tsx","UI/FlashMessagesPresenter/FlashMessagesPresenter.tsx","App.tsx","theme/useAppTheme.ts","index.tsx"],"names":["ProductListWorkerType","getIsLoading","state","productList","isLoading","getProductListResponse","productListResponse","getRequestOptions","requestOptions","getRequestError","requestError","DEFAULT_REQUEST_HEADERS","Accept","ACCESS_TOKEN_LS_KEY","NEW_ENTITY_ITEM_ID","DEFAULT_ENTITY_LIST_ALLOWABLE_VALUES","initialState","page","per_page","search","sort_asc","sort_field","productListSlice","createSlice","name","reducers","setIsLoading","action","payload","setProductListResponse","setRequestOptions","sort","newSortField","setRequestError","clear","AuthSagaWorkerType","fetchData","type","FETCH_DATA","fieldName","SORT","goToPage","GO_TO_PAGE","searchStr","SEARCH","changePerPage","perPage","CHANGE_PER_PAGE","deleteProduct","id","DELETE","productListSelectors","selectors","productListActions","actions","productListReducer","reducer","productListWorkers","workers","logger","title","arg","console","log","ajax","requestConfig","a","ajaxWorkReport","config","response","error","axios","getErrorData","e","responseData","errorMsg","message","addBearerTokenToRequestConfig","token","headers","Authorization","validateData","schema","data","validate","getDefaultRequestConfig","baseURL","process","getIsAuthenticated","auth","isAuthenticated","getIsLoadingUserData","isLoadingUserData","getUserData","userData","authSlice","setIsAuthenticated","SetRequestError","SetUserData","SetIsLoadingUserData","authSignUp","SIGN_IN_WORKER","authGetUserData","GET_USER_DATA","authSignOut","SIGN_OUT","authSelectors","authActions","authReducer","authWorkers","requestExecutor","validationSchema","call","defaultRequestConfig","localStorage","getItem","fullRequestConfig","status","put","getCommonResponseSchemaFieldsForAnEntityList","current_page","yup","required","last_page","total","ProductListItemSchema","description","nullable","options","ProductListResponseSchema","getIsDarkMode","app","isDarkMode","getIsOpenMenu","isOpenMenu","getIsSmallWidth","isSmallWidth","getRedirectUrl","redirectUrl","getLastFlashMessage","flashMessage","appSlice","toggleDarkMode","setIsDarkMode","setIsOpenMenu","toggleMenuMode","setIsSmallWidth","redirect","path","addFlashMessage","appSelectors","appActions","appReducer","getProductListRequestConfig","url","method","params","getDeleteProductRequestConfig","productListWatcher","fetchDataWorker","sortWorker","goToPageWorker","searchWorker","changePerPageWorker","deleteProductWorker","takeEvery","select","result","errorData","isEmpty","length","isNotLastPage","msg","ProductWorkerType","getProductResponse","product","productResponse","productSlice","setProductResponse","CategoryListWorkerType","productFetchData","productPatchData","PATCH_DATA","productNew","NEW","productSelectors","productActions","productReducer","productWorkers","useAppTranslation","t","useTranslation","key","appTranslationTStub","getProductResponseSchema","categories","ProductResponseSchema","shape","PageTitle","children","Wrap","StyledTypography","component","styled","Typography","Box","theme","spacing","ChapterTitle","Ul","ul","useAppDispatch","useDispatch","useAppSelector","useSelector","StyledFieldSet","fullWidth","defaultRequestErrorMessageList","RequestErrorView","localOverrideRequestErrorMessageList","getErrorMessage","code","StyledAlert","severity","AlertTitle","ChapterWrap","Alert","initialValues","email","password","StyledAvatar","Avatar","palette","secondary","main","Form","form","StyledButton","Button","DebouncedInput","placeholder","disabled","handleSearchCb","value","delay","useState","internalSearchStr","setInternalSearchStr","isInputFocused","setIsInputFocused","searchInputRef","useRef","useEffect","setTimeout","clearInterval","current","focus","StyledTextField","onChange","target","inputRef","InputProps","startAdornment","InputAdornment","position","TextField","CellValue","regexp","RegExp","ms","String","match","slices","split","map","item","index","SearchStrWrap","span","primary","DataGridRow","row","fields","actionRowPanelRender","TableRow","TableBodyCell","TableBodyCellActions","field","TableCell","DataGridHeadRow","handleColumnHeaderClkCb","sortField","sortAsc","actionColumnTitle","arrow","ActionColumnTableCell","toUpperCase","ColumnBtn","disableRipple","onClick","text","DataGrid","rows","columnClkCb","indexOffset","StyledTable","TableHead","TableBody","Table","EntityListForm","updateCb","searchClearCb","searchCb","columnHeaderClkCb","pageCount","paginationBtnClkCb","searchPlaceholder","changePerPageCb","addCb","searchNotFoundMsg","isShowAddBtn","SearchWrap","StyledBtn","newSearchStr","trim","PerPageSelect","Number","MenuItem","StyledPagination","count","Pagination","Select","EntityListFormSkeleton","StyledSkeleton","variant","Skeleton","ActionRowPanelDefault","handleDeleteCb","handleEditCb","handleSelectCb","isDeleteBtn","isEditBtn","isSelectBtn","color","confirm","ProductListForm","dispatch","useProductListFields","handleRowEdit","getPathByName","handleRowDelete","productListFormRender","Boolean","requestErrorRender","skeletonFormRender","useCategoryListFields","EntityListSubform","entityList","defaultSortFieldName","changeCb","setPage","setPerPage","setSearchStr","setSortField","setSortAsc","handleDeleteCategory","newValues","filter","deleteRow","currentRows","foundRows","includes","rowResult","searchFilter","foundAndSortRows","clonedRows","b","aSortValue","bSortValue","undefined","reverse","sortRows","Math","ceil","offset","rowsOnCurrentPageFilter","getRows","ifNotLastPage","currentPage","prev","AppModal","closeCb","open","StyledModal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","StyledPaper","Paper","Modal","categoryList","getCategoryListResponse","categoryListResponse","categoryListSlice","setCategoryListResponse","CategoryWorkerType","deleteCategory","categoryListActions","categoryListReducer","categoryListWorkers","categoryListSelectors","CategoryListForm","isModal","selectCb","handleRowSelect","categoryListFormRender","CategoryListSubform","categoryListSubformFields","setOpen","category","ProductForm","isNew","productData","formikConfig","enableReinitialize","onSubmit","values","requestData","prepareProductRequestData","formik","useFormik","titleRender","categoryListSubformRender","useMemo","setFieldValue","productFormRender","noValidate","handleSubmit","label","getFieldProps","helperText","errors","CategorySubformWrap","FormElementWrap","categorySlice","categoryResponse","setCategoryResponse","getCategoryResponse","SignUpWorkerType","categoryFetchData","categoryPatchData","categoryNew","categoryActions","categoryReducer","categorySelectors","categoryWorkers","getCategoryResponseSchema","CategoryResponseSchema","CategoryForm","categoryData","prepareCategoryRequestData","categoryFormRender","ButtonWrap","getSignUpFormValidationSchema","matches","min","x","max","password_confirmation","oneOf","signUpSlice","addNewUser","signUpData","signUp","signUpAction","signUpReducer","signUpWorkers","signUpSelectors","QueryFieldsError","Object","entries","join","SignUpForm","Container","maxWidth","autoComplete","margin","touched","Link","href","preventDefault","routes","exact","private","always","className","rel","useSignInValidationSchema","FormHelperText","useParams","routeParams","routeItem","find","route","toString","toLowerCase","generatePath","Error","RedirectExecutor","history","useHistory","push","RoutesStructure","userIsAuthenticated","getRouteAction","to","from","getProductFetchDataRequestConfig","getProductPatchDataRequestConfig","getNewProductRequestConfig","productWatcher","productFetchDataWorker","productPatchDataWorker","productNewWorker","CategoryListItemSchema","CategoryListResponseSchema","getCategoryListRequestConfig","getDeleteCategoryRequestConfig","categoryListWatcher","deleteCategoryWorker","getCategoryFetchDataRequestConfig","getCategoryPatchDataRequestConfig","getNewCategoryRequestConfig","categoryWatcher","categoryFetchDataWorker","categoryPatchDataWorker","categoryNewWorker","getSignUpAddNewUserRequestConfig","signUpWatcher","addNewUserWorker","UserDataValidationSchema","getUserDataRequestConfig","authWatcher","signInWorker","getUserDataWorker","signOutWorker","responseToTokenRequest","setItem","responseToUserDataRequest","removeItem","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","configureStore","devTools","middleware","all","run","StyledLinearProgress","LinearProgress","ProgressBar","authIsLoading","authIsLoadingUserData","ThemeModeSwitcher","BrightnessLow","BrightnessHigh","UserComponent","anchorEl","setAnchorEl","currentTarget","StyledMenu","keepMounted","button","style","outline","UserDataBox","Menu","User","resources","en","translation","test","validation__min_x_symbol","validation__max_x_symbol","validation__required","validation__email","ru","i18n","use","initReactI18next","init","lng","keySeparator","interpolation","escapeValue","LangSwitcher","StyledSelect","language","changeLanguage","MenuBtn","AppHeader","AppBar","StyledToolBar","LeftWrap","RightWrap","Toolbar","AppFooter","StyledAppBar","noWrap","year","Date","getFullYear","GlobalStyle","createGlobalStyle","NavLink","icon","StyledListItem","RouterLink","StyledListItemIcon","ListItemText","ListItem","ListItemIcon","AppNav","StyledList","List","NavBlock","handleDrawerClose","Drawer","transitionDuration","DrawerInternalWrap","NavWrap","StyledBox","NavBigWrap","show","square","div","SmallWidthChecker","handleResize","window","innerWidth","addEventListener","removeEventListener","FlashMessagesPresenter","lastFlashMessage","enqueueSnackbar","useSnackbar","anchorOrigin","vertical","horizontal","App","prefersDarkMode","useMediaQuery","React","createTheme","colors","deepOrange","deepPurple","useAppTheme","StylesProvider","injectFirst","CssBaseline","AppWrap","CenterBlock","Main","Core","appCore","maxSnack","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62f67b4b.chunk.js","sourcesContent":["import { ProductListItemKeys, ProductListResponseType } from '../types';\nimport { EntityListRequestOptions } from '../../../types/commonTypes';\nimport { RequestError } from '../../../store/types';\n\nexport type ProductListRequestOptions =\n  EntityListRequestOptions<ProductListItemKeys>;\n\nexport interface ProductListState {\n  isLoading: boolean;\n  productListResponse: ProductListResponseType | null;\n  requestOptions: ProductListRequestOptions;\n  requestError: RequestError | null;\n}\n\nexport enum ProductListWorkerType {\n  FETCH_DATA = 'productList/fetchDataWorker',\n  SORT = 'productList/sortWorker',\n  GO_TO_PAGE = 'productList/goToPageWorker',\n  SEARCH = 'productList/searchWorker',\n  CHANGE_PER_PAGE = 'productList/changePerPageWorker',\n  DELETE = 'productList/deleteWorker',\n}\n\ninterface ProductListWorker<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type ProductListFetchDataWorker = ProductListWorker<\n  ProductListWorkerType.FETCH_DATA,\n  null\n>;\n\nexport type ProductListSortWorker = ProductListWorker<\n  ProductListWorkerType.SORT,\n  ProductListItemKeys\n>;\n\nexport type ProductListGoToPageWorker = ProductListWorker<\n  ProductListWorkerType.GO_TO_PAGE,\n  number\n>;\n\nexport type ProductListSearchWorker = ProductListWorker<\n  ProductListWorkerType.SEARCH,\n  string\n>;\n\nexport type ProductListChangePerPageWorker = ProductListWorker<\n  ProductListWorkerType.CHANGE_PER_PAGE,\n  number\n>;\n\nexport type ProductListDeleteProductWorker = ProductListWorker<\n  ProductListWorkerType.DELETE,\n  number\n>;\n","import { RequestError, RootState } from '../../../store/types';\nimport { ProductListResponseType } from '../types';\nimport { ProductListRequestOptions } from './types';\n\nexport const getIsLoading = (state: RootState): boolean =>\n  state.productList.isLoading;\n\nexport const getProductListResponse = (\n  state: RootState,\n): ProductListResponseType | null => state.productList.productListResponse;\n\nexport const getRequestOptions = (\n  state: RootState,\n): ProductListRequestOptions => state.productList.requestOptions;\n\nexport const getRequestError = (state: RootState): RequestError | null =>\n  state.productList.requestError;\n","export const DEFAULT_SIGN_IN_EMAIL = 'xman@mail.ru';\nexport const DEFAULT_SIGN_IN_PASSWORD = 'p@ssw0rd';\n\nexport const IS_LOGGING_ENABLED =\n  process.env.REACT_APP_IS_LOGGING_ENABLED === 'TRUE';\n\nexport const API_URL =\n  process.env.REACT_APP_BASE_URL || 'http://localhost:8080/api/v1';\n\nexport const DEFAULT_REQUEST_HEADERS = {\n  Accept: 'application/json',\n  'Content-Type': 'application/json',\n};\n\nexport const ACCESS_TOKEN_LS_KEY = 'ACCESS_TOKEN_LS_KEY';\n\nexport const isStrictMode = false;\n\nexport const DEFAULT_DEBOUNCED_INPUT_DELAY = 600;\n\nexport const NEW_ENTITY_ITEM_ID = 'new';\n\nexport const LEFT_MENU_WIDTH = 300;\n\nexport const DEFAULT_ENTITY_LIST_ALLOWABLE_VALUES = [\n  5, 10, 25, 50, 999,\n] as const;\n\nexport const DEFAULT_ENTITY_LIST_PER_PAGE: typeof DEFAULT_ENTITY_LIST_ALLOWABLE_VALUES[number] = 5;\n\nexport const MODAL_TRANSITION_DURATION = 500;\n\nexport const SNACKBAR_PROVIDER_MAX_SNACK = 5;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ProductListItemKeys, ProductListResponseType } from '../types';\nimport { RequestError } from '../../../store/types';\nimport { DEFAULT_ENTITY_LIST_PER_PAGE } from '../../../config/config';\nimport { ProductListRequestOptions, ProductListState } from './types';\n\nconst initialState: ProductListState = {\n  isLoading: false,\n  productListResponse: null,\n  requestOptions: {\n    page: 1,\n    per_page: DEFAULT_ENTITY_LIST_PER_PAGE,\n    search: '',\n    sort_asc: 1,\n    sort_field: 'id',\n  },\n  requestError: null,\n};\n\nexport const productListSlice = createSlice({\n  name: 'productList',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n\n    setProductListResponse: (\n      state,\n      action: PayloadAction<ProductListResponseType | null>,\n    ) => {\n      state.productListResponse = action.payload;\n    },\n\n    setRequestOptions: (\n      state,\n      action: PayloadAction<Partial<ProductListRequestOptions>>,\n    ) => {\n      state.requestOptions = { ...state.requestOptions, ...action.payload };\n    },\n\n    sort: (state, action: PayloadAction<ProductListItemKeys>) => {\n      const { sort_field, sort_asc } = state.requestOptions;\n      const newSortField = action.payload;\n      state.requestOptions.page = 1;\n      if (sort_field === newSortField) {\n        state.requestOptions.sort_asc = sort_asc === 1 ? 0 : 1;\n      } else {\n        state.requestOptions.sort_field = newSortField;\n        state.requestOptions.sort_asc = 1;\n      }\n    },\n    setRequestError: (state, action: PayloadAction<RequestError | null>) => {\n      state.requestError = action.payload;\n    },\n    clear: (state) => {\n      // state.productListResponse = null;\n      state.requestError = null;\n    },\n  },\n});\n","import { ProductListItemKeys } from '../types';\nimport {\n  ProductListChangePerPageWorker,\n  ProductListDeleteProductWorker,\n  ProductListFetchDataWorker,\n  ProductListGoToPageWorker,\n  ProductListWorkerType,\n  ProductListSearchWorker,\n  ProductListSortWorker,\n} from './types';\n\nexport const fetchData = (): ProductListFetchDataWorker => ({\n  type: ProductListWorkerType.FETCH_DATA,\n  payload: null,\n});\n\nexport const sort = (\n  fieldName: ProductListItemKeys,\n): ProductListSortWorker => ({\n  type: ProductListWorkerType.SORT,\n  payload: fieldName,\n});\n\nexport const goToPage = (page: number): ProductListGoToPageWorker => ({\n  type: ProductListWorkerType.GO_TO_PAGE,\n  payload: page,\n});\n\nexport const search = (searchStr: string): ProductListSearchWorker => ({\n  type: ProductListWorkerType.SEARCH,\n  payload: searchStr,\n});\n\nexport const changePerPage = (\n  perPage: number,\n): ProductListChangePerPageWorker => ({\n  type: ProductListWorkerType.CHANGE_PER_PAGE,\n  payload: perPage,\n});\n\nexport const deleteProduct = (id: number): ProductListDeleteProductWorker => ({\n  type: ProductListWorkerType.DELETE,\n  payload: id,\n});\n","import { UserData, UserCredentials } from '../../types/userData';\nimport { RequestError } from '../types';\n\nexport interface AuthState {\n  isLoading: boolean;\n  isAuthenticated: boolean;\n  requestError: RequestError | null;\n  userData: UserData | null;\n  isLoadingUserData: boolean;\n}\n\nexport enum AuthSagaWorkerType {\n  SIGN_IN_WORKER = 'auth/authSignInWorker',\n  GET_USER_DATA = 'auth/getUserDataWorker',\n  SIGN_OUT = 'auth/signOutWorker',\n}\n\ninterface AuthSagaWorker<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type AuthSignInWorker = AuthSagaWorker<\n  AuthSagaWorkerType.SIGN_IN_WORKER,\n  UserCredentials\n>;\n\nexport type AuthGetUserDataWorker = AuthSagaWorker<\n  AuthSagaWorkerType.GET_USER_DATA,\n  null\n>;\n\nexport type AuthSignOutWorker = AuthSagaWorker<\n  AuthSagaWorkerType.SIGN_OUT,\n  null\n>;\n","import * as selectors from './selectors';\nimport { productListSlice } from './slice';\nimport * as workers from './workers';\n\nexport const productListSelectors = selectors;\n\nexport const { actions: productListActions, reducer: productListReducer } =\n  productListSlice;\n\nexport const productListWorkers = workers;\n","import { IS_LOGGING_ENABLED } from '../config/config';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const logger = (title: string, ...arg: any): void => {\n  if (IS_LOGGING_ENABLED) {\n    // eslint-disable-next-line no-console\n    console.log(`LOG: ${title}:`, ...arg);\n  }\n};\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { logger } from '../../utils/logger';\nimport { AjaxWorkReport } from './types';\n\nexport const ajax = async (\n  requestConfig: AxiosRequestConfig,\n): Promise<AxiosResponse> => {\n  const ajaxWorkReport: AjaxWorkReport = {\n    config: requestConfig,\n    response: null,\n    error: null,\n  };\n  try {\n    const response = await axios(requestConfig);\n    ajaxWorkReport.response = response;\n    return response;\n  } catch (e) {\n    ajaxWorkReport.error = e;\n    throw e;\n  } finally {\n    logger('ajax', ajaxWorkReport);\n  }\n};\n","import { AxiosError, AxiosRequestConfig } from 'axios';\nimport { AnyObjectSchema } from 'yup';\nimport { API_URL, DEFAULT_REQUEST_HEADERS } from '../config/config';\nimport { RequestError } from './types';\n\nexport const getErrorData = (e: Error): RequestError => ({\n  responseData: (e as AxiosError)?.response || null,\n  errorMsg: e.message,\n});\n\nexport const addBearerTokenToRequestConfig = (\n  token: string,\n  requestConfig: AxiosRequestConfig,\n): AxiosRequestConfig => ({\n  ...requestConfig,\n  headers: { ...requestConfig.headers, Authorization: `Bearer ${token}` },\n});\n\nexport const validateData = async (\n  schema: AnyObjectSchema,\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  data: any,\n): Promise<void> => {\n  await schema.validate(data);\n};\n\nexport const getDefaultRequestConfig = (): AxiosRequestConfig => ({\n  baseURL: API_URL,\n  headers: DEFAULT_REQUEST_HEADERS,\n});\n","import { RequestError, RootState } from '../types';\nimport { UserData } from '../../types/userData';\n\nexport const getIsAuthenticated = (state: RootState): boolean =>\n  state.auth.isAuthenticated;\n\nexport const getIsLoading = (state: RootState): boolean => state.auth.isLoading;\n\nexport const getRequestError = (state: RootState): RequestError | null =>\n  state.auth.requestError;\n\nexport const getIsLoadingUserData = (state: RootState): boolean =>\n  state.auth.isLoadingUserData;\n\nexport const getUserData = (state: RootState): UserData | null =>\n  state.auth.userData;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RequestError } from '../types';\nimport { UserData } from '../../types/userData';\nimport { AuthState } from './types';\n\nconst initialState: AuthState = {\n  isLoading: false,\n  isAuthenticated: false,\n  requestError: null,\n  userData: null,\n  isLoadingUserData: true,\n};\n\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    setIsAuthenticated: (state, action: PayloadAction<boolean>) => {\n      state.isAuthenticated = action.payload;\n    },\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n    SetRequestError: (state, action: PayloadAction<RequestError | null>) => {\n      state.requestError = action.payload;\n    },\n    SetUserData: (state, action: PayloadAction<UserData | null>) => {\n      state.userData = action.payload;\n    },\n    SetIsLoadingUserData: (state, action: PayloadAction<boolean>) => {\n      state.isLoadingUserData = action.payload;\n    },\n  },\n});\n","import { UserCredentials } from '../../types/userData';\nimport {\n  AuthGetUserDataWorker,\n  AuthSagaWorkerType,\n  AuthSignInWorker,\n  AuthSignOutWorker,\n} from './types';\n\nexport const authSignUp = (payload: UserCredentials): AuthSignInWorker => ({\n  type: AuthSagaWorkerType.SIGN_IN_WORKER,\n  payload,\n});\n\nexport const authGetUserData = (): AuthGetUserDataWorker => ({\n  type: AuthSagaWorkerType.GET_USER_DATA,\n  payload: null,\n});\n\nexport const authSignOut = (): AuthSignOutWorker => ({\n  type: AuthSagaWorkerType.SIGN_OUT,\n  payload: null,\n});\n","import * as selectors from './selectors';\nimport { authSlice } from './slice';\nimport * as workers from './workers';\n\nexport const authSelectors = selectors;\n\nexport const { actions: authActions, reducer: authReducer } = authSlice;\n\nexport const authWorkers = workers;\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, SagaReturnType } from 'redux-saga/effects';\nimport { AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { AnyObjectSchema, Asserts } from 'yup';\nimport { ACCESS_TOKEN_LS_KEY } from '../config/config';\nimport { ajax } from '../api/transport';\nimport {\n  addBearerTokenToRequestConfig,\n  getDefaultRequestConfig,\n  getErrorData,\n  validateData,\n} from './helpers';\nimport { authActions } from './auth';\n\nexport function* requestExecutor(\n  requestConfig: AxiosRequestConfig,\n  validationSchema: AnyObjectSchema | null,\n): SagaIterator {\n  try {\n    const defaultRequestConfig: ReturnType<typeof getDefaultRequestConfig> =\n      yield call(getDefaultRequestConfig);\n    const token: SagaReturnType<typeof localStorage.getItem> = yield call(\n      [localStorage, localStorage.getItem],\n      ACCESS_TOKEN_LS_KEY,\n    );\n    const fullRequestConfig: ReturnType<typeof addBearerTokenToRequestConfig> =\n      yield call(addBearerTokenToRequestConfig, token || '', {\n        ...requestConfig,\n        ...defaultRequestConfig,\n      });\n    //если при запросе подразумевается ответ в виде json, который мы валидируем\n    if (validationSchema) {\n      const response: AxiosResponse<Asserts<typeof validationSchema>> =\n        yield call(ajax, fullRequestConfig);\n\n      yield call(validateData, validationSchema, response.data);\n\n      return response.data;\n    }\n    //если ответа в виде json нет то просто выполняем запрос\n    yield call(ajax, fullRequestConfig);\n  } catch (e) {\n    const unauthorizedAccessStatusCode = 401;\n    if (getErrorData(e).responseData?.status === unauthorizedAccessStatusCode) {\n      yield put(authActions.setIsAuthenticated(false));\n      yield put(authActions.SetUserData(null));\n    }\n    throw e;\n  }\n}\n","import * as yup from 'yup';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getCommonResponseSchemaFieldsForAnEntityList = () => ({\n  current_page: yup.number().required(),\n  last_page: yup.number().required(),\n  per_page: yup.number().required(),\n  total: yup.number().required(),\n});\n","import * as yup from 'yup';\nimport { getCommonResponseSchemaFieldsForAnEntityList } from '../../types/helpers';\n\nconst ProductListItemSchema = yup.object({\n  id: yup.number().required(),\n  title: yup.string().required(),\n  description: yup.string().nullable(),\n  options: yup.string().nullable(),\n});\n\ninterface ProductListItem extends yup.Asserts<typeof ProductListItemSchema> {}\n\nexport type ProductListItemKeys = keyof ProductListItem;\n\nexport const ProductListResponseSchema = yup.object({\n  data: yup.array(ProductListItemSchema).required(),\n  ...getCommonResponseSchemaFieldsForAnEntityList(),\n});\n\nexport interface ProductListResponseType\n  extends yup.Asserts<typeof ProductListResponseSchema> {}\n","import { RootState } from '../types';\nimport { AppRedirectUrl, FlashMessage } from './types';\n\nexport const getIsDarkMode = (state: RootState): boolean =>\n  state.app.isDarkMode;\n\nexport const getIsOpenMenu = (state: RootState): boolean =>\n  state.app.isOpenMenu;\n\nexport const getIsSmallWidth = (state: RootState): boolean =>\n  state.app.isSmallWidth;\n\nexport const getRedirectUrl = (state: RootState): AppRedirectUrl | null =>\n  state.app.redirectUrl;\n\nexport const getLastFlashMessage = (state: RootState): FlashMessage | null =>\n  state.app.flashMessage;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { AppState, FlashMessage } from './types';\n\nconst APP_SLICE_NAME = 'app';\n\nconst initialState: AppState = {\n  isDarkMode: false,\n  isOpenMenu: true,\n  isSmallWidth: false,\n  redirectUrl: null,\n  flashMessage: null,\n};\n\nexport const appSlice = createSlice({\n  name: APP_SLICE_NAME,\n  initialState,\n  reducers: {\n    toggleDarkMode: (state) => {\n      state.isDarkMode = !state.isDarkMode;\n    },\n    setIsDarkMode: (state, action: PayloadAction<boolean>) => {\n      state.isDarkMode = action.payload;\n    },\n    setIsOpenMenu: (state, action: PayloadAction<boolean>) => {\n      state.isOpenMenu = action.payload;\n    },\n    toggleMenuMode: (state) => {\n      state.isOpenMenu = !state.isOpenMenu;\n    },\n    setIsSmallWidth: (state, action: PayloadAction<boolean>) => {\n      state.isSmallWidth = action.payload;\n    },\n    // в компоненте RedirectExecutor мы отслеживаем изменение\n    // redirectUrl и соответственно делаем redirect\n    // это нужно что бы не привязывать компоненты к роутеру\n    // и была возможность делать переадресацию из саг\n    // без доступа напрямую к HISTORY API\n    redirect: (state, action: PayloadAction<string>) => {\n      state.redirectUrl = {\n        path: action.payload,\n      };\n    },\n\n    addFlashMessage: (state, action: PayloadAction<FlashMessage>) => {\n      state.flashMessage = action.payload;\n    },\n  },\n});\n","import * as selectors from './selectors';\nimport { appSlice } from './slice';\n\nexport const appSelectors = selectors;\n\nexport const { actions: appActions, reducer: appReducer } = appSlice;\n","import { AxiosRequestConfig } from 'axios';\nimport { ProductListRequestOptions } from './types';\n\nexport const getProductListRequestConfig = (\n  requestOptions: ProductListRequestOptions,\n): AxiosRequestConfig => ({\n  url: '/products',\n  method: 'get',\n  params: requestOptions,\n});\n\nexport const getDeleteProductRequestConfig = (\n  id: number,\n): AxiosRequestConfig => ({\n  url: `/products/${id}`,\n  method: 'delete',\n});\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\nimport { logger } from '../../../utils/logger';\nimport { requestExecutor } from '../../../store/sagas';\nimport { ProductListResponseSchema, ProductListResponseType } from '../types';\nimport { getErrorData } from '../../../store/helpers';\nimport { FlashMessage } from '../../../store/app/types';\nimport { appActions } from '../../../store/app';\nimport {\n  ProductListChangePerPageWorker,\n  ProductListDeleteProductWorker,\n  ProductListGoToPageWorker,\n  ProductListWorkerType,\n  ProductListSearchWorker,\n  ProductListSortWorker,\n} from './types';\nimport {\n  getDeleteProductRequestConfig,\n  getProductListRequestConfig,\n} from './helpers';\nimport { productListActions, productListSelectors } from './index';\n\nexport function* productListWatcher(): SagaIterator {\n  yield takeEvery(ProductListWorkerType.FETCH_DATA, fetchDataWorker);\n  yield takeEvery(ProductListWorkerType.SORT, sortWorker);\n  yield takeEvery(ProductListWorkerType.GO_TO_PAGE, goToPageWorker);\n  yield takeEvery(ProductListWorkerType.SEARCH, searchWorker);\n  yield takeEvery(ProductListWorkerType.CHANGE_PER_PAGE, changePerPageWorker);\n  yield takeEvery(ProductListWorkerType.DELETE, deleteProductWorker);\n}\n\nexport function* fetchDataWorker(): SagaIterator {\n  try {\n    yield put(productListActions.setIsLoading(true));\n    yield put(productListActions.setRequestError(null));\n    const requestOptions = yield select(productListSelectors.getRequestOptions);\n    const requestConfig: ReturnType<typeof getProductListRequestConfig> =\n      yield call(getProductListRequestConfig, requestOptions);\n    const result: ProductListResponseType = yield call(\n      requestExecutor,\n      requestConfig,\n      ProductListResponseSchema,\n    );\n    yield call(logger, 'ProductList fetchDataWorker', result);\n    yield put(productListActions.setProductListResponse(result));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'ProductList fetchDataWorker', errorData);\n    yield put(productListActions.setRequestError(errorData));\n  } finally {\n    yield put(productListActions.setIsLoading(false));\n  }\n}\n\nexport function* sortWorker(action: ProductListSortWorker): SagaIterator {\n  yield put(productListActions.sort(action.payload));\n  yield call(fetchDataWorker);\n}\n\nexport function* goToPageWorker(\n  action: ProductListGoToPageWorker,\n): SagaIterator {\n  yield put(productListActions.setRequestOptions({ page: action.payload }));\n  yield call(fetchDataWorker);\n}\n\nexport function* searchWorker(action: ProductListSearchWorker): SagaIterator {\n  yield put(\n    productListActions.setRequestOptions({\n      search: action.payload,\n      page: 1,\n      sort_field: 'id',\n      sort_asc: 1,\n    }),\n  );\n  yield call(fetchDataWorker);\n}\n\nexport function* changePerPageWorker(\n  action: ProductListChangePerPageWorker,\n): SagaIterator {\n  yield put(\n    productListActions.setRequestOptions({ per_page: action.payload, page: 1 }),\n  );\n  yield call(fetchDataWorker);\n}\n\nexport function* deleteProductWorker(\n  action: ProductListDeleteProductWorker,\n): SagaIterator {\n  try {\n    yield put(productListActions.setIsLoading(true));\n    yield put(productListActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getDeleteProductRequestConfig> =\n      yield call(getDeleteProductRequestConfig, action.payload);\n    yield call(requestExecutor, requestConfig, null);\n    yield call(fetchDataWorker);\n\n    const productListResponse: ReturnType<\n      typeof productListSelectors.getProductListResponse\n    > = yield select(productListSelectors.getProductListResponse);\n\n    if (productListResponse) {\n      const isEmpty = productListResponse.data.length === 0;\n      const isNotLastPage =\n        productListResponse.current_page > productListResponse.last_page;\n      if (isEmpty && isNotLastPage) {\n        yield put(\n          productListActions.setRequestOptions({\n            page: productListResponse.last_page,\n          }),\n        );\n        yield call(fetchDataWorker);\n      }\n    }\n\n    const msg: FlashMessage = {\n      msg: 'features__product-list-form__msg-successfully-deleted-product',\n      type: 'success',\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'ProductList fetchDataWorker', errorData);\n    yield put(productListActions.setRequestError(errorData));\n  } finally {\n    yield put(productListActions.setIsLoading(false));\n  }\n}\n","import { RequestError, RootState } from '../../../store/types';\nimport { ProductResponseType } from '../types';\n\nexport const getProductResponse = (\n  state: RootState,\n): ProductResponseType | null => state.product.productResponse;\n\nexport const getIsLoading = (state: RootState): boolean =>\n  state.product.isLoading;\n\nexport const getRequestError = (state: RootState): RequestError | null =>\n  state.product.requestError;\n","import { RequestError } from '../../../store/types';\nimport { ProductRequestType, ProductResponseType } from '../types';\n\nexport interface ProductState {\n  productResponse: ProductResponseType | null;\n  isLoading: boolean;\n  requestError: RequestError | null;\n}\n\nexport enum ProductWorkerType {\n  FETCH_DATA = 'product/fetchDataWorker',\n  PATCH_DATA = 'product/patchDataWorker',\n  NEW = 'product/newWorker',\n}\n\ninterface ProductWorker<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type ProductFetchDataWorker = ProductWorker<\n  ProductWorkerType.FETCH_DATA,\n  number\n>;\n\nexport type ProductPatchDataWorker = ProductWorker<\n  ProductWorkerType.PATCH_DATA,\n  ProductRequestType\n>;\n\nexport type ProductNewWorker = ProductWorker<\n  ProductWorkerType.NEW,\n  ProductRequestType\n>;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { ProductResponseType } from '../types';\nimport { RequestError } from '../../../store/types';\nimport { ProductState } from './types';\n\nconst initialState: ProductState = {\n  productResponse: null,\n  isLoading: false,\n  requestError: null,\n};\n\nexport const productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n    setProductResponse: (\n      state,\n      action: PayloadAction<ProductResponseType | null>,\n    ) => {\n      state.productResponse = action.payload;\n    },\n    setRequestError: (state, action: PayloadAction<RequestError | null>) => {\n      state.requestError = action.payload;\n    },\n    clear: (state) => {\n      state.productResponse = null;\n      state.requestError = null;\n    },\n  },\n});\n","import { ProductRequestType } from '../types';\nimport {\n  ProductFetchDataWorker,\n  ProductNewWorker,\n  ProductPatchDataWorker,\n  ProductWorkerType,\n} from './types';\n\nexport const productFetchData = (id: number): ProductFetchDataWorker => ({\n  type: ProductWorkerType.FETCH_DATA,\n  payload: id,\n});\n\nexport const productPatchData = (\n  data: ProductRequestType,\n): ProductPatchDataWorker => ({\n  type: ProductWorkerType.PATCH_DATA,\n  payload: data,\n});\n\nexport const productNew = (data: ProductRequestType): ProductNewWorker => ({\n  type: ProductWorkerType.NEW,\n  payload: data,\n});\n","import { CategoryListItemKeys, CategoryListResponseType } from '../types';\nimport { EntityListRequestOptions } from '../../../types/commonTypes';\nimport { RequestError } from '../../../store/types';\n\nexport type CategoryListRequestOptions =\n  EntityListRequestOptions<CategoryListItemKeys>;\n\nexport interface CategoryListState {\n  isLoading: boolean;\n  categoryListResponse: CategoryListResponseType | null;\n  requestOptions: CategoryListRequestOptions;\n  requestError: RequestError | null;\n}\n\nexport enum CategoryListWorkerType {\n  FETCH_DATA = 'categoryList/fetchDataWorker',\n  SORT = 'categoryList/sortWorker',\n  GO_TO_PAGE = 'categoryList/goToPageWorker',\n  SEARCH = 'categoryList/searchWorker',\n  CHANGE_PER_PAGE = 'categoryList/changePerPageWorker',\n  DELETE = 'categoryList/deleteWorker',\n}\n\ninterface CategoryListWorker<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type CategoryListFetchDataWorker = CategoryListWorker<\n  CategoryListWorkerType.FETCH_DATA,\n  null\n>;\n\nexport type CategoryListSortWorker = CategoryListWorker<\n  CategoryListWorkerType.SORT,\n  CategoryListItemKeys\n>;\n\nexport type CategoryListGoToPageWorker = CategoryListWorker<\n  CategoryListWorkerType.GO_TO_PAGE,\n  number\n>;\n\nexport type CategoryListSearchWorker = CategoryListWorker<\n  CategoryListWorkerType.SEARCH,\n  string\n>;\n\nexport type CategoryListChangePerPageWorker = CategoryListWorker<\n  CategoryListWorkerType.CHANGE_PER_PAGE,\n  number\n>;\n\nexport type CategoryListDeleteCategoryWorker = CategoryListWorker<\n  CategoryListWorkerType.DELETE,\n  number\n>;\n","import * as selectors from './selectors';\nimport { productSlice } from './slice';\nimport * as workers from './workers';\n\nexport const productSelectors = selectors;\n\nexport const { actions: productActions, reducer: productReducer } =\n  productSlice;\n\nexport const productWorkers = workers;\n","import { useTranslation } from 'react-i18next';\nimport { AppTranslationHookTType, TranslationMessageKeys } from './types';\n\nexport const useAppTranslation = (): AppTranslationHookTType => {\n  const { t } = useTranslation();\n\n  return (key: TranslationMessageKeys, ...arg: any[]) => t(key, ...arg);\n};\n\nexport const appTranslationTStub = (): '' => '';\n","import * as yup from 'yup';\nimport { appTranslationTStub } from '../../i18n/useAppTranslation';\nimport { AppTranslationHookTType } from '../../i18n/types';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getProductResponseSchema = (t: AppTranslationHookTType) => {\n  return yup.object({\n    id: yup.number().required(),\n    title: yup.string().required(t('validation__required')),\n    description: yup.string().nullable(),\n    options: yup.string().nullable(),\n    categories: yup\n      .array(\n        yup.object({\n          id: yup.number().required(),\n          title: yup.string().required(t('validation__required')),\n          description: yup.string().nullable(),\n        }),\n      )\n      .required(),\n  });\n};\n\nexport const ProductResponseSchema =\n  getProductResponseSchema(appTranslationTStub);\n\nexport interface ProductResponseType\n  extends yup.Asserts<typeof ProductResponseSchema> {}\n\nexport const ProductRequestSchema = ProductResponseSchema.shape({\n  categories: yup.array(yup.number()).required(),\n});\n\nexport interface ProductRequestType\n  extends yup.Asserts<typeof ProductRequestSchema> {}\n","import React from 'react';\nimport { Box, Theme, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\n\nexport const PageTitle: React.FC = ({ children }) => {\n  return (\n    <Wrap>\n      <StyledTypography component={'h2'}>{children}</StyledTypography>\n    </Wrap>\n  );\n};\n\nconst StyledTypography: typeof Typography = styled(Typography)`\n  font-size: 150%;\n`;\n\nconst Wrap = styled(Box)`\n  padding: ${({ theme }) => (theme as Theme).spacing(2, 0)};\n`;\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport styled from 'styled-components';\nimport { PageTitle } from '../../components/PageTitle';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <>\n      <PageTitle>Домашняя страница</PageTitle>\n      <ChapterTitle>\n        Это демонстрационный проект, написанный с целью показать уровень\n        владения навыками разработки на react.\n      </ChapterTitle>\n      <ChapterTitle>Исходный код:</ChapterTitle>\n      <Typography>\n        Backend:&nbsp;\n        <Link\n          className=\"text-info\"\n          href=\"https://github.com/horhoj/store2-back\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          https://github.com/horhoj/store2-back\n        </Link>\n      </Typography>\n\n      <Typography>\n        Frontend:&nbsp;\n        <Link\n          className=\"text-info\"\n          href=\"https://github.com/horhoj/store2-front\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          https://github.com/horhoj/store2-front\n        </Link>\n      </Typography>\n\n      <ChapterTitle>Используемые технологии:</ChapterTitle>\n      <Ul>\n        <li>react</li>\n        <li>redux-toolkit</li>\n        <li>redux-saga</li>\n        <li>typescript</li>\n        <li>yup</li>\n        <li>formik</li>\n        <li>i18next</li>\n        <li>styled-components</li>\n        <li>axios</li>\n        <li>Material UI</li>\n      </Ul>\n      <ChapterTitle>Функционал проекта:</ChapterTitle>\n      <Ul>\n        <li>backend написан на PHP 8 и laravel</li>\n        <li>Общение между back и front по API REST</li>\n        <li>\n          Входящие данные от АПИ валидируются в реальном времени, с помощью\n          типов описанных посредством библиотеки yup\n        </li>\n        <li>\n          Описание сущностей выполнено на typescript, который автоматически\n          генерируется на основе описаний структур сущностей посредством yup,\n          что решает проблему двойного описания сущностей при разработки и их\n          валидации в реальном времени\n        </li>\n        <li>\n          Некоторые сложные компоненты разработаны самостоятельно (Например\n          DataGrid).\n        </li>\n        <li>\n          Многие компоненты переиспользуются, например DataGrid используется для\n          отображения списков категорий и товаров, а CategoryList отображает\n          список категорий и на странице категорий и в модальном окне для выбора\n          категории в форме редактирования товара.\n        </li>\n        <li>для управления проектом используется redux-saga.</li>\n      </Ul>\n    </>\n  );\n};\n\nconst ChapterTitle = styled(Typography)`\n  font-size: 120%;\n  margin-top: 10px;\n  font-style: italic;\n`;\n\nconst Ul = styled.ul`\n  list-style: symbols();\n  & > li {\n    margin-left: 30px;\n  }\n`;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './types';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import styled from 'styled-components';\n\nexport const StyledFieldSet = styled('fieldset')<{ fullWidth: boolean }>`\n  border: none;\n  padding: 0;\n  margin: 0;\n  ${({ fullWidth }) => (fullWidth ? 'width: 100%;' : '')}\n`;\n","import { RequestError } from '../../store/types';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\nimport { RequestErrorMessageList } from './types';\n\nconst defaultRequestErrorMessageList: RequestErrorMessageList = {\n  401: 'app__request-error-view__error__failed-to-get-a-response-from-the-server',\n  404: 'app__request-error-view__error__resource-not-found',\n};\n\nexport const useErrorMessage =\n  () =>\n  (\n    requestError: RequestError,\n    localOverrideRequestErrorMessageList: RequestErrorMessageList | null = null,\n  ): string => {\n    const t = useAppTranslation();\n\n    if (requestError.responseData === null) {\n      return t(\n        'app__request-error-view__error__failed-to-get-a-response-from-the-server',\n      );\n    }\n    const code = requestError.responseData.status;\n    const requestErrorMessageList = {\n      ...defaultRequestErrorMessageList,\n      ...localOverrideRequestErrorMessageList,\n    };\n\n    const msg = requestErrorMessageList[code];\n    if (msg) {\n      return t(msg);\n    }\n    return t('app__request-error-view__error__unknown-error-with-code', {\n      code: requestError.responseData.status,\n    });\n  };\n","import React from 'react';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport styled from 'styled-components';\nimport { Box, Theme } from '@material-ui/core';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\nimport { RequestErrorViewProps } from './types';\nimport { useErrorMessage } from './hooks';\n\nexport const RequestErrorView: React.FC<RequestErrorViewProps> = ({\n  requestError,\n  localOverrideRequestErrorMessageList = null,\n  children,\n}) => {\n  const t = useAppTranslation();\n  const getErrorMessage = useErrorMessage();\n  return (\n    <>\n      <StyledAlert severity={'error'}>\n        <AlertTitle>{t('app__request-error-view__title')}</AlertTitle>\n        <ChapterWrap>\n          {getErrorMessage(requestError, localOverrideRequestErrorMessageList)}\n        </ChapterWrap>\n        <ChapterWrap>{children}</ChapterWrap>\n      </StyledAlert>\n    </>\n  );\n};\n\nconst StyledAlert = styled(Alert)`\n  width: 100%;\n  max-width: 600px;\n`;\n\nconst ChapterWrap = styled(Box)`\n  margin-top: ${({ theme }) => (theme as Theme).spacing(1)}px;\n`;\n","import React from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Container from '@material-ui/core/Container';\nimport styled from 'styled-components';\nimport { FormikConfig, useFormik } from 'formik';\nimport { FormHelperText, Typography } from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport { UserCredentials } from '../../types/userData';\nimport {\n  DEFAULT_SIGN_IN_EMAIL,\n  DEFAULT_SIGN_IN_PASSWORD,\n} from '../../config/config';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { authSelectors, authWorkers } from '../../store/auth';\nimport { StyledFieldSet } from '../../theme/styled';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\nimport { RequestErrorView } from '../../components/RequestErrorView';\nimport { getPathByName } from '../../router';\nimport { appActions } from '../../store/app';\nimport { useSignInValidationSchema } from './hooks';\n\nconst initialValues: UserCredentials = {\n  email: DEFAULT_SIGN_IN_EMAIL,\n  password: DEFAULT_SIGN_IN_PASSWORD,\n};\n\nexport const SignInPage: React.FC = () => {\n  const t = useAppTranslation();\n  const dispatch = useAppDispatch();\n  const requestError = useAppSelector(authSelectors.getRequestError);\n  const isLoading = useAppSelector(authSelectors.getIsLoading);\n\n  const validationSchema = useSignInValidationSchema();\n\n  const formikConfig: FormikConfig<UserCredentials> = {\n    enableReinitialize: false,\n    initialValues,\n    onSubmit: (values) => {\n      dispatch(authWorkers.authSignUp(values));\n    },\n    validationSchema,\n  };\n\n  const formik = useFormik<UserCredentials>(formikConfig);\n\n  const handleSignUpLinkClk = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const path = getPathByName('signUp');\n    dispatch(appActions.redirect(path));\n  };\n\n  const requestErrorRender = requestError ? (\n    <RequestErrorView requestError={requestError} />\n  ) : null;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Wrap>\n        <StyledAvatar>\n          <LockOutlinedIcon />\n        </StyledAvatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {t('page__sign-in__page-title')}\n        </Typography>\n        <StyledFieldSet disabled={isLoading} fullWidth={true}>\n          <Form noValidate onSubmit={formik.handleSubmit}>\n            {requestErrorRender}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              autoComplete=\"email\"\n              type=\"email\"\n              label={t('page__sign-in__form-label__email')}\n              {...formik.getFieldProps('email')}\n            />\n            <FormHelperText error={true}>{formik.errors.email}</FormHelperText>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              label={t('page__sign-in__form-label__password')}\n              type=\"password\"\n              autoComplete=\"current-password\"\n              {...formik.getFieldProps('password')}\n            />\n            <FormHelperText error={true}>\n              {formik.errors.password}\n            </FormHelperText>\n            <StyledButton\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={isLoading}\n            >\n              {t('page__sign-in__form-label__submit-btn')}\n            </StyledButton>\n          </Form>\n        </StyledFieldSet>\n        <Typography>\n          <Link href=\"#\" onClick={handleSignUpLinkClk}>\n            {t('page__sign-in__sign-up-link')}\n          </Link>\n        </Typography>\n      </Wrap>\n    </Container>\n  );\n};\n\nconst Wrap = styled(Box)`\n  margin-top: ${({ theme }) => theme.spacing(8)}px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin: ${({ theme }) => theme.spacing(1)}px;\n  background-color: ${({ theme }) => theme.palette.secondary.main};\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  margin-top: ${({ theme }) => theme.spacing(1)}px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin: ${({ theme }) => theme.spacing(3, 0, 2)};\n`;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { TextField } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport styled from 'styled-components';\nimport { DebouncedInputProps } from './types';\n\nexport const DebouncedInput: React.FC<DebouncedInputProps> = ({\n  placeholder,\n  disabled,\n  handleSearchCb,\n  value,\n  delay,\n}) => {\n  const [internalSearchStr, setInternalSearchStr] = useState<string>('');\n  const [isInputFocused, setIsInputFocused] = useState<boolean>(false);\n  const searchInputRef = useRef<HTMLTextAreaElement>(null);\n\n  const handle = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value;\n    setInternalSearchStr(value);\n  };\n\n  useEffect(() => {\n    const id = setTimeout(() => {\n      if (internalSearchStr !== value) {\n        handleSearchCb(internalSearchStr);\n        setIsInputFocused(true);\n      }\n    }, delay);\n    return () => {\n      clearInterval(id);\n    };\n  }, [internalSearchStr]);\n\n  useEffect(() => {\n    setInternalSearchStr(value);\n  }, [value]);\n\n  useEffect(() => {\n    if (!disabled && isInputFocused && searchInputRef.current) {\n      searchInputRef.current.focus();\n      setIsInputFocused(false);\n    }\n  }, [disabled]);\n\n  return (\n    <StyledTextField\n      placeholder={placeholder}\n      disabled={disabled}\n      onChange={handle}\n      value={internalSearchStr}\n      inputRef={searchInputRef}\n      InputProps={{\n        startAdornment: (\n          <InputAdornment position=\"start\">\n            <SearchIcon />\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n};\n\nconst StyledTextField = styled(TextField)`\n  width: 100%;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Theme } from '@material-ui/core';\nimport { CellValueProps } from './types';\n\nexport const CellValue: React.FC<CellValueProps> = ({ value, searchStr }) => {\n  //если значение ячейки не задано\n  if (value === null) {\n    return <></>;\n  }\n  //если строка поиска не задана то возвращаем value\n  if (searchStr === '') {\n    return <>{value}</>;\n  }\n  const regexp = new RegExp(searchStr, 'ig');\n\n  // const ms = String(value).split(searchStr);\n  const ms = String(value).match(regexp);\n  const slices = String(value).split(regexp);\n\n  //если value не содержит в себе подстрок со значением searchStr\n  //то возвращаем исходное значение\n  if (!ms) {\n    return <>{value}</>;\n  }\n\n  return (\n    <>\n      {slices.map((item, index) => (\n        <span key={index}>\n          {item}\n          {index < slices.length - 1 ? (\n            <SearchStrWrap>{ms[index]}</SearchStrWrap>\n          ) : null}\n        </span>\n      ))}\n    </>\n  );\n};\n\nconst SearchStrWrap = styled.span`\n  background-color: ${({ theme }) => {\n    return (theme as Theme).palette.primary.main;\n  }};\n  color: white;\n  border-radius: 3px;\n  padding: 3px;\n`;\n","import React from 'react';\nimport { TableCell, TableRow, Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { DataGridRowProps } from './types';\nimport { CellValue } from './components/CellValue';\n\nexport const DataGridRow: React.FC<DataGridRowProps> = ({\n  row,\n  fields,\n  searchStr,\n  actionRowPanelRender,\n  index,\n}) => {\n  return (\n    <TableRow>\n      <TableBodyCell>{index}</TableBodyCell>\n      <TableBodyCellActions>\n        {actionRowPanelRender(row.id)}\n      </TableBodyCellActions>\n      {fields.map((field) => (\n        <TableBodyCell key={field.id}>\n          <CellValue value={row[field.name]} searchStr={searchStr} />\n        </TableBodyCell>\n      ))}\n    </TableRow>\n  );\n};\n\nconst TableBodyCell = styled(TableCell)`\n  padding: ${({ theme }) => (theme as Theme).spacing(2, 3)};\n`;\n\nconst TableBodyCellActions = styled(TableCell)`\n  padding: ${({ theme }) => (theme as Theme).spacing(1, 1)};\n`;\n","import React from 'react';\nimport { Button, TableCell, TableRow, Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport { DataGridHeadRowProps } from './types';\n\nexport const DataGridHeadRow: React.FC<DataGridHeadRowProps> = ({\n  fields,\n  handleColumnHeaderClkCb,\n  sortField,\n  sortAsc,\n  disabled,\n  actionColumnTitle,\n}) => {\n  const handleColumnClkCreator = (fieldName: string) => () => {\n    handleColumnHeaderClkCb(fieldName);\n  };\n\n  const arrow = (fieldName: string) => {\n    if (fieldName !== sortField) {\n      return null;\n    }\n    return sortAsc ? <ArrowUpwardIcon /> : <ArrowDownwardIcon />;\n  };\n\n  return (\n    <TableRow>\n      <ActionColumnTableCell disabled={disabled}>№</ActionColumnTableCell>\n      <ActionColumnTableCell disabled={disabled}>\n        {actionColumnTitle.toUpperCase()}\n      </ActionColumnTableCell>\n      {fields.map((field) => (\n        <TableCell key={field.id}>\n          <ColumnBtn\n            disableRipple={true}\n            onClick={handleColumnClkCreator(field.name)}\n            disabled={disabled}\n          >\n            {field.title.toUpperCase()}&nbsp;{arrow(field.name)}\n          </ColumnBtn>\n        </TableCell>\n      ))}\n    </TableRow>\n  );\n};\n\nconst ColumnBtn = styled(Button)`\n  justify-content: start;\n`;\n\nconst ActionColumnTableCell = styled(TableCell)<{ disabled: boolean }>`\n  color: ${({ theme, disabled }) =>\n    disabled\n      ? (theme as Theme).palette.text.disabled\n      : (theme as Theme).palette.text.primary};\n`;\n","import { Table, TableHead, TableBody, Box } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { DataGridProps } from './types';\nimport { DataGridRow } from './components/DataGridRow';\nimport { DataGridHeadRow } from './components/DataGridHeadRow';\n\nexport const DataGrid: React.FC<DataGridProps> = ({\n  fields,\n  rows,\n  disabled,\n  columnClkCb,\n  sortAsc,\n  sortField,\n  searchStr,\n  actionColumnTitle,\n  actionRowPanelRender,\n  page,\n  perPage,\n}) => {\n  const handleColumnHeaderClk = (fieldName: string) => {\n    columnClkCb(fieldName);\n  };\n\n  const indexOffset = (page - 1) * perPage + 1;\n\n  return (\n    <Wrap>\n      <StyledTable>\n        <TableHead>\n          <DataGridHeadRow\n            fields={fields}\n            handleColumnHeaderClkCb={handleColumnHeaderClk}\n            sortField={sortField}\n            sortAsc={sortAsc}\n            disabled={disabled}\n            actionColumnTitle={actionColumnTitle}\n          />\n        </TableHead>\n        <TableBody>\n          {rows.map((row, index) => (\n            <DataGridRow\n              key={row.id}\n              row={row}\n              index={index + indexOffset}\n              fields={fields}\n              searchStr={searchStr}\n              actionRowPanelRender={actionRowPanelRender}\n            />\n          ))}\n        </TableBody>\n      </StyledTable>\n    </Wrap>\n  );\n};\n\nconst Wrap = styled(Box)`\n  width: 100%;\n  overflow-x: auto;\n`;\n\nconst StyledTable = styled(Table)`\n  min-width: 600px;\n`;\n","import React from 'react';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddIcon from '@material-ui/icons/Add';\nimport styled from 'styled-components';\nimport {\n  Box,\n  Button,\n  MenuItem,\n  Select,\n  Theme,\n  Typography,\n} from '@material-ui/core';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { DebouncedInput } from '../DebouncedInput';\nimport {\n  DEFAULT_DEBOUNCED_INPUT_DELAY,\n  DEFAULT_ENTITY_LIST_ALLOWABLE_VALUES,\n} from '../../config/config';\nimport { DataGrid } from '../DataGrid';\nimport { EntityListFormProps } from './types';\n\nexport const EntityListForm: React.FC<EntityListFormProps> = ({\n  disabled,\n  updateCb,\n  searchClearCb,\n  searchCb,\n  searchStr,\n  rows,\n  fields,\n  columnHeaderClkCb,\n  sortField,\n  sortAsc,\n  pageCount,\n  page,\n  paginationBtnClkCb,\n  searchPlaceholder,\n  perPage,\n  changePerPageCb,\n  actionColumnTitle,\n  actionRowPanelRender,\n  addCb,\n  searchNotFoundMsg,\n  isEmpty,\n  isShowAddBtn,\n}) => {\n  const handleChangeSearchStr = (newSearchStr: string) => {\n    if (searchStr.trim() !== newSearchStr.trim()) {\n      searchCb(newSearchStr.trim());\n    }\n  };\n\n  return (\n    <Wrap>\n      <SearchWrap>\n        {isShowAddBtn ? (\n          <StyledBtn disabled={disabled} onClick={addCb}>\n            <AddIcon />\n          </StyledBtn>\n        ) : null}\n        <StyledBtn onClick={updateCb} disabled={disabled}>\n          <UpdateIcon />\n        </StyledBtn>\n        {isEmpty && searchStr === '' ? null : (\n          <>\n            <StyledBtn disabled={disabled} onClick={searchClearCb}>\n              <ClearIcon />\n            </StyledBtn>\n            <DebouncedInput\n              placeholder={searchPlaceholder}\n              disabled={disabled}\n              handleSearchCb={handleChangeSearchStr}\n              value={searchStr}\n              delay={DEFAULT_DEBOUNCED_INPUT_DELAY}\n            />\n          </>\n        )}\n      </SearchWrap>\n      {isEmpty && searchStr !== '' ? (\n        <Typography>{searchNotFoundMsg}</Typography>\n      ) : null}\n      {isEmpty ? null : (\n        <>\n          <DataGrid\n            rows={rows}\n            fields={fields}\n            disabled={disabled}\n            columnClkCb={columnHeaderClkCb}\n            sortField={sortField}\n            sortAsc={sortAsc}\n            searchStr={searchStr}\n            actionColumnTitle={actionColumnTitle}\n            actionRowPanelRender={actionRowPanelRender}\n            perPage={perPage}\n            page={page}\n          />\n          <PerPageSelect\n            value={perPage}\n            disabled={disabled}\n            onChange={(e) => {\n              changePerPageCb(Number(e.target.value));\n            }}\n          >\n            {DEFAULT_ENTITY_LIST_ALLOWABLE_VALUES.map((value) => (\n              <MenuItem value={value} key={value}>\n                {value}\n              </MenuItem>\n            ))}\n          </PerPageSelect>\n          <StyledPagination\n            count={pageCount}\n            page={page}\n            onChange={(e, page: number) => paginationBtnClkCb(page)}\n            disabled={disabled}\n          />\n        </>\n      )}\n    </Wrap>\n  );\n};\n\nconst Wrap = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: ${({ theme }) => (theme as Theme).spacing(2)}px;\n`;\n\nconst SearchWrap = styled(Box)`\n  display: flex;\n  width: 100%;\n`;\n\nconst StyledBtn = styled(Button)`\n  min-width: 40px;\n  min-height: 40px;\n\n  &:last-child {\n    margin-right: 40px;\n  }\n`;\n\nconst PerPageSelect = styled(Select)`\n  margin-top: ${({ theme }) => (theme as Theme).spacing(2)}px;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Box } from '@material-ui/core';\nimport { Skeleton } from '@material-ui/lab';\n\nexport const EntityListFormSkeleton: React.FC = () => {\n  return (\n    <Wrap>\n      <StyledSkeleton variant=\"rect\" />\n      <StyledSkeleton variant=\"rect\" />\n      <StyledSkeleton variant=\"rect\" />\n      <StyledSkeleton variant=\"rect\" />\n    </Wrap>\n  );\n};\n\nconst Wrap = styled(Box)`\n  display: grid;\n  grid-template-rows: 60px 1fr 0.1fr 0.1fr;\n  grid-gap: 10px;\n  height: 100%;\n`;\n\nconst StyledSkeleton = styled(Skeleton)`\n  height: 100%;\n`;\n","import React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\nimport { ActionRowPanelDefaultProps } from './types';\n\nexport const ActionRowPanelDefault: React.FC<ActionRowPanelDefaultProps> = ({\n  id,\n  handleDeleteCb = null,\n  handleEditCb = null,\n  handleSelectCb = null,\n  disabled,\n  isDeleteBtn,\n  isEditBtn,\n  isSelectBtn,\n}) => {\n  const t = useAppTranslation();\n\n  const handleDeleteBtnClk = () => {\n    if (!handleDeleteCb) {\n      return;\n    }\n    if (\n      confirm(t('component__action-row-panel-default__delete-request-message'))\n    ) {\n      handleDeleteCb(id);\n    }\n  };\n\n  const handleEditBtnClk = () => {\n    if (!handleEditCb) {\n      return;\n    }\n    handleEditCb(id);\n  };\n\n  const handleSelectBtnClk = () => {\n    if (!handleSelectCb) {\n      return;\n    }\n    handleSelectCb(id);\n  };\n\n  return (\n    <Wrap>\n      {isEditBtn ? (\n        <StyledButton onClick={handleEditBtnClk} disabled={disabled}>\n          <EditIcon color={disabled ? 'disabled' : 'primary'} />\n        </StyledButton>\n      ) : null}\n\n      {isDeleteBtn ? (\n        <StyledButton onClick={handleDeleteBtnClk} disabled={disabled}>\n          <DeleteForeverIcon color={disabled ? 'disabled' : 'secondary'} />\n        </StyledButton>\n      ) : null}\n\n      {isSelectBtn ? (\n        <StyledButton onClick={handleSelectBtnClk} disabled={disabled}>\n          <TouchAppIcon color={disabled ? 'disabled' : 'action'} />\n        </StyledButton>\n      ) : null}\n    </Wrap>\n  );\n};\n\nconst Wrap = styled(Box)`\n  display: flex;\n  flex-wrap: nowrap;\n`;\n\nconst StyledButton = styled(Button)`\n  min-width: 40px;\n`;\n","import React, { useEffect } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport {\n  productListActions,\n  productListSelectors,\n  productListWorkers,\n} from '../ProductListReducer';\nimport { ProductListItemKeys } from '../types';\nimport { EntityListForm } from '../../../components/EntityListForm';\nimport { useAppTranslation } from '../../../i18n/useAppTranslation';\nimport { RequestErrorView } from '../../../components/RequestErrorView';\nimport { EntityListFormSkeleton } from '../../../components/EntityListFormSkeleton';\nimport { ActionRowPanelDefault } from '../../../components/ActionRowPanelDefault';\nimport { getPathByName } from '../../../router';\nimport { appActions } from '../../../store/app';\nimport { PageTitle } from '../../../components/PageTitle';\nimport { NEW_ENTITY_ITEM_ID } from '../../../config/config';\nimport { useProductListFields } from './hooks';\n\nexport const ProductListForm: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const productList = useAppSelector(\n    productListSelectors.getProductListResponse,\n  );\n  const isLoading = useAppSelector(productListSelectors.getIsLoading);\n  const requestOptions = useAppSelector(productListSelectors.getRequestOptions);\n  const requestError = useAppSelector(productListSelectors.getRequestError);\n  const fields = useProductListFields();\n  const t = useAppTranslation();\n\n  useEffect(() => {\n    dispatch(productListWorkers.fetchData());\n    return () => {\n      dispatch(productListActions.clear());\n    };\n  }, []);\n\n  const handleColumnHeaderClk = (fieldName: ProductListItemKeys) => {\n    dispatch(productListWorkers.sort(fieldName));\n  };\n\n  const handlePaginationBtnClk = (page: number) => {\n    dispatch(productListWorkers.goToPage(page));\n  };\n\n  const handleUpdateBtnClk = () => {\n    dispatch(productListWorkers.fetchData());\n  };\n\n  const handleSearchClearBtn = () => {\n    dispatch(productListWorkers.search(''));\n  };\n\n  const handleSearchCb = (searchStr: string) => {\n    dispatch(productListWorkers.search(searchStr));\n  };\n\n  const handleChangePerPage = (perPage: number) => {\n    dispatch(productListWorkers.changePerPage(perPage));\n  };\n\n  const handleRowEdit = (id: number) => {\n    const path = getPathByName('product', { id });\n    dispatch(appActions.redirect(path));\n  };\n\n  const handleRowDelete = (id: number) => {\n    dispatch(productListWorkers.deleteProduct(id));\n  };\n  const handleAdd = () => {\n    const path = getPathByName('product', { id: NEW_ENTITY_ITEM_ID });\n    dispatch(appActions.redirect(path));\n  };\n\n  const actionRowPanelRenderCb = (id: number) => (\n    <ActionRowPanelDefault\n      isDeleteBtn={true}\n      isEditBtn={true}\n      isSelectBtn={false}\n      id={id}\n      handleEditCb={handleRowEdit}\n      handleDeleteCb={handleRowDelete}\n      disabled={isLoading}\n    />\n  );\n\n  const productListFormRender = productList ? (\n    <EntityListForm\n      disabled={isLoading}\n      updateCb={handleUpdateBtnClk}\n      searchClearCb={handleSearchClearBtn}\n      searchCb={handleSearchCb}\n      searchStr={requestOptions.search}\n      rows={productList.data}\n      fields={fields}\n      columnHeaderClkCb={handleColumnHeaderClk}\n      sortField={String(requestOptions.sort_field)}\n      sortAsc={Boolean(requestOptions.sort_asc)}\n      pageCount={productList.last_page}\n      page={productList.current_page}\n      paginationBtnClkCb={handlePaginationBtnClk}\n      searchPlaceholder={t('features__product-list-form__search-placeholder')}\n      perPage={productList.per_page}\n      changePerPageCb={handleChangePerPage}\n      actionColumnTitle={t('features__product-list-form__action-column-title')}\n      actionRowPanelRender={actionRowPanelRenderCb}\n      addCb={handleAdd}\n      searchNotFoundMsg={t('features__product-list-form__search-not-found-msg')}\n      isEmpty={productList.total === 0}\n      isShowAddBtn={true}\n    />\n  ) : null;\n\n  const requestErrorRender = requestError ? (\n    <RequestErrorView requestError={requestError} />\n  ) : null;\n\n  const skeletonFormRender =\n    isLoading && !productList ? <EntityListFormSkeleton /> : null;\n\n  return (\n    <>\n      <PageTitle>{t('features__product-list-form__page-title')} </PageTitle>\n      {requestErrorRender}\n      {productListFormRender}\n      {skeletonFormRender}\n    </>\n  );\n};\n","import { useAppTranslation } from '../../../i18n/useAppTranslation';\nimport { DataGridColumn } from '../../../components/DataGrid/types';\nimport { ProductListItemKeys } from '../types';\n\nexport const useProductListFields =\n  (): DataGridColumn<ProductListItemKeys>[] => {\n    const t = useAppTranslation();\n\n    return [\n      {\n        id: 1,\n        name: 'id',\n        title: t('features__product-list-form__data-grid-column__id'),\n      },\n      {\n        id: 2,\n        name: 'title',\n        title: t('features__product-list-form__data-grid-column__title'),\n      },\n      {\n        id: 3,\n        name: 'description',\n        title: t('features__product-list-form__data-grid-column__description'),\n      },\n      {\n        id: 4,\n        name: 'options',\n        title: t('features__product-list-form__data-grid-column__options'),\n      },\n    ];\n  };\n","import { DataGridColumn } from '../../../components/DataGrid/types';\nimport { CategoryListItemKeys } from '../types';\nimport { useAppTranslation } from '../../../i18n/useAppTranslation';\n\nexport const useCategoryListFields =\n  (): DataGridColumn<CategoryListItemKeys>[] => {\n    const t = useAppTranslation();\n\n    return [\n      {\n        id: 1,\n        name: 'id',\n        title: t('features__category-list-form__data-grid-column__id'),\n      },\n      {\n        id: 2,\n        name: 'title',\n        title: t('features__category-list-form__data-grid-column__title'),\n      },\n      {\n        id: 3,\n        name: 'description',\n        title: t('features__category-list-form__data-grid-column__description'),\n      },\n    ];\n  };\n","import React, { useEffect, useState } from 'react';\nimport { EntityListForm } from '../EntityListForm';\nimport { ActionRowPanelDefault } from '../ActionRowPanelDefault';\nimport { EntityListSubformProps } from './types';\nimport {\n  deleteRow,\n  rowsOnCurrentPageFilter,\n  searchFilter,\n  sortRows,\n} from './helpers';\n\nexport const EntityListSubform: React.FC<EntityListSubformProps> = ({\n  entityList,\n  fields,\n  defaultSortFieldName,\n  actionColumnTitle,\n  searchPlaceholder,\n  changeCb,\n  isLoading,\n  searchNotFoundMsg,\n  addCb,\n}) => {\n  const [page, setPage] = useState<number>(1);\n  const [perPage, setPerPage] = useState<number>(5);\n  const [searchStr, setSearchStr] = useState<string>('');\n  const [sortField, setSortField] = useState<string>(defaultSortFieldName);\n  const [sortAsc, setSortAsc] = useState<boolean>(true);\n\n  const getRows = () => {\n    //получаем фильтрованные по searchStr значения\n    const foundRows = searchFilter(searchStr, entityList, fields);\n    const foundAndSortRows = sortRows(sortField, sortAsc, foundRows);\n    const pageCount = Math.ceil(foundAndSortRows.length / perPage);\n    const offset = (page - 1) * perPage;\n    const foundAndSortRowsOnCurrentPage = rowsOnCurrentPageFilter(\n      offset,\n      perPage,\n      foundAndSortRows,\n    );\n\n    return { rows: foundAndSortRowsOnCurrentPage, pageCount };\n  };\n\n  const changePerPageCb = (perPage: number) => {\n    setPage(1);\n    setPerPage(perPage);\n  };\n\n  const columnHeaderClkCb = (fieldName: string) => {\n    if (sortField === fieldName) {\n      setSortAsc((prev) => !prev);\n      return;\n    }\n    setSortField(fieldName);\n    setSortAsc(true);\n  };\n\n  const handleDeleteCategory = (id: number) => {\n    const newValues = deleteRow(id, entityList);\n    changeCb(newValues);\n  };\n\n  const searchClearCb = () => {\n    setPage(1);\n    setSearchStr('');\n  };\n\n  const actionRowPanelRender = (id: number) => {\n    return (\n      <ActionRowPanelDefault\n        isDeleteBtn={true}\n        isEditBtn={false}\n        isSelectBtn={false}\n        disabled={false}\n        id={id}\n        handleDeleteCb={handleDeleteCategory}\n      />\n    );\n  };\n\n  const currentRows = getRows();\n\n  useEffect(() => {\n    const isEmpty = currentRows.rows.length === 0;\n    const ifNotLastPage = page > currentRows.pageCount;\n    if (isEmpty && ifNotLastPage) {\n      const currentPage = currentRows.pageCount > 1 ? currentRows.pageCount : 1;\n      setPage(currentPage);\n    }\n  }, [currentRows]);\n\n  return (\n    <>\n      <EntityListForm\n        fields={fields}\n        rows={currentRows.rows}\n        page={page}\n        sortAsc={sortAsc}\n        perPage={perPage}\n        sortField={sortField}\n        pageCount={currentRows.pageCount}\n        actionRowPanelRender={actionRowPanelRender}\n        addCb={addCb}\n        actionColumnTitle={actionColumnTitle}\n        changePerPageCb={changePerPageCb}\n        searchPlaceholder={searchPlaceholder}\n        disabled={isLoading}\n        searchStr={searchStr}\n        paginationBtnClkCb={setPage}\n        columnHeaderClkCb={columnHeaderClkCb}\n        searchCb={setSearchStr}\n        searchClearCb={searchClearCb}\n        updateCb={() => {}}\n        searchNotFoundMsg={searchNotFoundMsg}\n        isEmpty={currentRows.rows.length === 0}\n        isShowAddBtn={true}\n      />\n    </>\n  );\n};\n","import { DataGridColumn, DataGridRow } from '../DataGrid/types';\n\nexport const searchFilter = (\n  searchStr: string,\n  entityList: DataGridRow[],\n  fields: DataGridColumn<string>[],\n): DataGridRow[] => {\n  if (searchStr === '') {\n    return entityList;\n  }\n  return entityList.filter((item) => {\n    const fieldNames = fields.map((field) => field.name);\n\n    return (\n      fieldNames\n        .map((fieldName) => String(item[fieldName]).includes(searchStr))\n        .filter((rowResult) => rowResult).length > 0\n    );\n  });\n};\n\nexport const rowsOnCurrentPageFilter = (\n  offset: number,\n  perPage: number,\n  rows: DataGridRow[],\n): DataGridRow[] =>\n  rows.filter((row, index) => index >= offset && index < offset + perPage);\n\nexport const sortRows = (\n  sortField: string,\n  sortAsc: boolean,\n  rows: DataGridRow[],\n): DataGridRow[] => {\n  //клонируем массив, что бы не допустить мутации\n  const clonedRows = [...rows];\n\n  //если массив пустой то незачем выполнять лишние операции\n  if (rows.length === 0) {\n    return clonedRows;\n  }\n\n  clonedRows.sort((a, b) => {\n    const aSortValue = a[sortField];\n    const bSortValue = b[sortField];\n\n    if (aSortValue === bSortValue) {\n      return 0;\n    }\n\n    if (aSortValue === null || bSortValue === null) {\n      return 0;\n    }\n\n    if (aSortValue === undefined || bSortValue === undefined) {\n      return 0;\n    }\n\n    return aSortValue > bSortValue ? 1 : -1;\n  });\n\n  if (!sortAsc) {\n    clonedRows.reverse();\n  }\n\n  return clonedRows;\n};\n\nexport const deleteRow = (\n  id: number,\n  entityList: DataGridRow[],\n): DataGridRow[] => entityList.filter((row) => row.id !== id);\n","import React from 'react';\nimport { Modal, Paper, Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { MODAL_TRANSITION_DURATION } from '../../config/config';\nimport { AppModalProps } from './types';\n\nexport const AppModal: React.FC<AppModalProps> = ({\n  closeCb,\n  open,\n  children,\n}) => {\n  return (\n    <StyledModal\n      open={open}\n      onClose={closeCb}\n      closeAfterTransition\n      BackdropComponent={Backdrop}\n      BackdropProps={{\n        timeout: MODAL_TRANSITION_DURATION,\n      }}\n    >\n      <Fade in={open}>\n        <StyledPaper>{children}</StyledPaper>\n      </Fade>\n    </StyledModal>\n  );\n};\n\nconst StyledPaper = styled(Paper)`\n  padding: ${({ theme }) => (theme as Theme).spacing(2)}px;\n  max-width: 80%;\n  max-height: 90%;\n  min-height: 50%;\n  min-width: 50%;\n  overflow: auto;\n  @media screen and (max-width: 600px) {\n    max-width: 95%;\n    max-height: 95%;\n  }\n`;\n\nconst StyledModal = styled(Modal)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import { RequestError, RootState } from '../../../store/types';\nimport { CategoryListResponseType } from '../types';\nimport { CategoryListRequestOptions } from './types';\n\nexport const getIsLoading = (state: RootState): boolean =>\n  state.categoryList.isLoading;\n\nexport const getCategoryListResponse = (\n  state: RootState,\n): CategoryListResponseType | null => state.categoryList.categoryListResponse;\n\nexport const getRequestOptions = (\n  state: RootState,\n): CategoryListRequestOptions => state.categoryList.requestOptions;\n\nexport const getRequestError = (state: RootState): RequestError | null =>\n  state.categoryList.requestError;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { DEFAULT_ENTITY_LIST_PER_PAGE } from '../../../config/config';\nimport { CategoryListItemKeys, CategoryListResponseType } from '../types';\nimport { RequestError } from '../../../store/types';\nimport { CategoryListState, CategoryListRequestOptions } from './types';\n\nconst initialState: CategoryListState = {\n  isLoading: false,\n  categoryListResponse: null,\n  requestOptions: {\n    page: 1,\n    per_page: DEFAULT_ENTITY_LIST_PER_PAGE,\n    search: '',\n    sort_asc: 1,\n    sort_field: 'id',\n  },\n  requestError: null,\n};\n\nexport const categoryListSlice = createSlice({\n  name: 'categoryList',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n\n    setCategoryListResponse: (\n      state,\n      action: PayloadAction<CategoryListResponseType | null>,\n    ) => {\n      state.categoryListResponse = action.payload;\n    },\n\n    setRequestOptions: (\n      state,\n      action: PayloadAction<Partial<CategoryListRequestOptions>>,\n    ) => {\n      state.requestOptions = { ...state.requestOptions, ...action.payload };\n    },\n\n    sort: (state, action: PayloadAction<CategoryListItemKeys>) => {\n      const { sort_field, sort_asc } = state.requestOptions;\n      const newSortField = action.payload;\n      state.requestOptions.page = 1;\n      if (sort_field === newSortField) {\n        state.requestOptions.sort_asc = sort_asc === 1 ? 0 : 1;\n      } else {\n        state.requestOptions.sort_field = newSortField;\n        state.requestOptions.sort_asc = 1;\n      }\n    },\n\n    setRequestError: (state, action: PayloadAction<RequestError | null>) => {\n      state.requestError = action.payload;\n    },\n\n    clear: (state) => {\n      state.requestError = null;\n    },\n  },\n});\n","import { CategoryListItemKeys } from '../types';\nimport {\n  CategoryListChangePerPageWorker,\n  CategoryListDeleteCategoryWorker,\n  CategoryListFetchDataWorker,\n  CategoryListGoToPageWorker,\n  CategoryListSearchWorker,\n  CategoryListSortWorker,\n  CategoryListWorkerType,\n} from './types';\n\nexport const fetchData = (): CategoryListFetchDataWorker => ({\n  type: CategoryListWorkerType.FETCH_DATA,\n  payload: null,\n});\n\nexport const sort = (\n  fieldName: CategoryListItemKeys,\n): CategoryListSortWorker => ({\n  type: CategoryListWorkerType.SORT,\n  payload: fieldName,\n});\n\nexport const goToPage = (page: number): CategoryListGoToPageWorker => ({\n  type: CategoryListWorkerType.GO_TO_PAGE,\n  payload: page,\n});\n\nexport const search = (searchStr: string): CategoryListSearchWorker => ({\n  type: CategoryListWorkerType.SEARCH,\n  payload: searchStr,\n});\n\nexport const changePerPage = (\n  page: number,\n): CategoryListChangePerPageWorker => ({\n  type: CategoryListWorkerType.CHANGE_PER_PAGE,\n  payload: page,\n});\n\nexport const deleteCategory = (\n  id: number,\n): CategoryListDeleteCategoryWorker => ({\n  type: CategoryListWorkerType.DELETE,\n  payload: id,\n});\n","import { CategoryRequestType, CategoryResponseType } from '../types';\nimport { RequestError } from '../../../store/types';\n\nexport interface CategoryState {\n  categoryResponse: CategoryResponseType | null;\n  isLoading: boolean;\n  requestError: RequestError | null;\n}\n\nexport enum CategoryWorkerType {\n  FETCH_DATA = 'category/fetchDataWorker',\n  PATCH_DATA = 'category/patchDataWorker',\n  NEW = 'category/newWorker',\n}\n\ninterface CategoryWorker<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type CategoryFetchDataWorker = CategoryWorker<\n  CategoryWorkerType.FETCH_DATA,\n  number\n>;\n\nexport type CategoryPatchDataWorker = CategoryWorker<\n  CategoryWorkerType.PATCH_DATA,\n  CategoryRequestType\n>;\n\nexport type CategoryNewWorker = CategoryWorker<\n  CategoryWorkerType.NEW,\n  CategoryRequestType\n>;\n","import * as selectors from './selectors';\nimport { categoryListSlice } from './slice';\nimport * as workers from './workers';\n\nexport const { actions: categoryListActions, reducer: categoryListReducer } =\n  categoryListSlice;\n\nexport const categoryListWorkers = workers;\n\nexport const categoryListSelectors = selectors;\n","import React, { useEffect } from 'react';\nimport { PageTitle } from '../../../components/PageTitle';\nimport { useAppTranslation } from '../../../i18n/useAppTranslation';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport {\n  categoryListActions,\n  categoryListSelectors,\n  categoryListWorkers,\n} from '../categoryListReducer';\nimport { EntityListForm } from '../../../components/EntityListForm';\nimport { CategoryListItemKeys } from '../types';\nimport { ActionRowPanelDefault } from '../../../components/ActionRowPanelDefault';\nimport { EntityListFormSkeleton } from '../../../components/EntityListFormSkeleton';\nimport { RequestErrorView } from '../../../components/RequestErrorView';\nimport { logger } from '../../../utils/logger';\nimport { getPathByName } from '../../../router';\nimport { appActions } from '../../../store/app';\nimport { NEW_ENTITY_ITEM_ID } from '../../../config/config';\nimport { useCategoryListFields } from './hooks';\nimport { CategoryListFormProps } from './types';\n\nexport const CategoryListForm: React.FC<CategoryListFormProps> = ({\n  isModal = false,\n  selectCb,\n}) => {\n  const t = useAppTranslation();\n  const dispatch = useAppDispatch();\n  const categoryList = useAppSelector(\n    categoryListSelectors.getCategoryListResponse,\n  );\n  const isLoading = useAppSelector(categoryListSelectors.getIsLoading);\n  const requestOptions = useAppSelector(\n    categoryListSelectors.getRequestOptions,\n  );\n  const requestError = useAppSelector(categoryListSelectors.getRequestError);\n  const fields = useCategoryListFields();\n\n  useEffect(() => {\n    dispatch(categoryListWorkers.fetchData());\n    return () => {\n      dispatch(categoryListActions.clear());\n    };\n  }, []);\n\n  const handleUpdateBtnClk = () => {\n    dispatch(categoryListWorkers.fetchData());\n  };\n\n  const handleSearchClearBtn = () => {\n    dispatch(categoryListWorkers.search(''));\n  };\n\n  const handleSearchCb = (searchStr: string) => {\n    dispatch(categoryListWorkers.search(searchStr));\n  };\n\n  const handleColumnHeaderClk = (fieldName: CategoryListItemKeys) => {\n    dispatch(categoryListWorkers.sort(fieldName));\n  };\n\n  const handlePaginationBtnClk = (page: number) => {\n    dispatch(categoryListWorkers.goToPage(page));\n  };\n\n  const handleChangePerPage = (perPage: number) => {\n    dispatch(categoryListWorkers.changePerPage(perPage));\n  };\n\n  const handleAdd = () => {\n    logger('categoryList new');\n    const path = getPathByName('category', { id: NEW_ENTITY_ITEM_ID });\n    dispatch(appActions.redirect(path));\n  };\n\n  const handleRowEdit = (id: number) => {\n    logger('categoryList Edit', id);\n    const path = getPathByName('category', { id });\n    dispatch(appActions.redirect(path));\n  };\n\n  const handleRowDelete = (id: number) => {\n    dispatch(categoryListWorkers.deleteCategory(id));\n  };\n\n  const handleRowSelect = (id: number) => {\n    if (!categoryList) {\n      return;\n    }\n    const row = categoryList.data.filter((row) => row.id === id)[0];\n    if (selectCb) {\n      selectCb(row);\n    }\n  };\n\n  const actionRowPanelRenderCb = (id: number) => (\n    <ActionRowPanelDefault\n      isEditBtn={!isModal}\n      isDeleteBtn={!isModal}\n      isSelectBtn={isModal}\n      id={id}\n      handleEditCb={handleRowEdit}\n      handleDeleteCb={handleRowDelete}\n      handleSelectCb={handleRowSelect}\n      disabled={isLoading}\n    />\n  );\n\n  const categoryListFormRender = categoryList ? (\n    <EntityListForm\n      disabled={isLoading}\n      updateCb={handleUpdateBtnClk}\n      searchClearCb={handleSearchClearBtn}\n      searchCb={handleSearchCb}\n      searchStr={requestOptions.search}\n      rows={categoryList.data}\n      fields={fields}\n      columnHeaderClkCb={handleColumnHeaderClk}\n      sortField={requestOptions.sort_field}\n      page={categoryList.current_page}\n      paginationBtnClkCb={handlePaginationBtnClk}\n      searchPlaceholder={t('features__category-list-form__search-placeholder')}\n      perPage={categoryList.per_page}\n      changePerPageCb={handleChangePerPage}\n      actionColumnTitle={t('features__category-list-form__action-column-title')}\n      addCb={handleAdd}\n      actionRowPanelRender={actionRowPanelRenderCb}\n      pageCount={categoryList.last_page}\n      sortAsc={Boolean(requestOptions.sort_asc)}\n      searchNotFoundMsg={t(\n        'features__category-list-form__search-not-found-msg',\n      )}\n      isEmpty={categoryList.total === 0}\n      isShowAddBtn={!isModal}\n    />\n  ) : null;\n\n  const requestErrorRender = requestError ? (\n    <RequestErrorView requestError={requestError} />\n  ) : null;\n\n  const skeletonFormRender =\n    isLoading && !categoryList ? <EntityListFormSkeleton /> : null;\n\n  return (\n    <>\n      <PageTitle>{t('features__category-list-form__page-title')}</PageTitle>\n      {requestErrorRender}\n      {categoryListFormRender}\n      {skeletonFormRender}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useCategoryListFields } from '../../../../categoryList/CategoryListForm/hooks';\nimport { EntityListSubform } from '../../../../../components/EntityListSubform';\nimport { logger } from '../../../../../utils/logger';\nimport { useAppTranslation } from '../../../../../i18n/useAppTranslation';\nimport { AppModal } from '../../../../../components/AppModal';\nimport { CategoryListForm } from '../../../../categoryList/CategoryListForm';\nimport { CategoryListItem } from '../../../../categoryList/types';\nimport { useAppDispatch } from '../../../../../store/hooks';\n\nimport { appActions } from '../../../../../store/app';\nimport { CategoryListSubformProps } from './types';\n\nexport const CategoryListSubform: React.FC<CategoryListSubformProps> = ({\n  entityList,\n  changeCb,\n  isLoading,\n}) => {\n  const categoryListSubformFields = useCategoryListFields();\n  const t = useAppTranslation();\n  logger('CategoryListSubform RERENDER!');\n\n  const [open, setOpen] = useState<boolean>(false);\n  const dispatch = useAppDispatch();\n\n  const addCb = () => {\n    setOpen(true);\n  };\n\n  const closeModalCb = () => {\n    setOpen(false);\n  };\n\n  const selectCb = (category: CategoryListItem) => {\n    const isSelected =\n      entityList.filter((item) => item.id === category.id).length > 0;\n    if (!isSelected) {\n      changeCb([...entityList, category]);\n      setOpen(false);\n    } else {\n      dispatch(\n        appActions.addFlashMessage({\n          msg: 'features__product-form__category-list-subform__msg-category-already-been-selected',\n          type: 'warning',\n        }),\n      );\n    }\n  };\n\n  return (\n    <>\n      <AppModal open={open} closeCb={closeModalCb}>\n        <CategoryListForm isModal={true} selectCb={selectCb} />\n      </AppModal>\n      <EntityListSubform\n        entityList={entityList}\n        addCb={addCb}\n        fields={categoryListSubformFields}\n        defaultSortFieldName={'id'}\n        searchPlaceholder={t(\n          'features__product-form__category-list-subform__search-placeholder',\n        )}\n        actionColumnTitle={t(\n          'features__product-form__category-list-subform__action-column-title',\n        )}\n        changeCb={changeCb}\n        isLoading={isLoading}\n        searchNotFoundMsg={t(\n          'features__product-form__category-list-subform__search-not-found-msg',\n        )}\n      />\n    </>\n  );\n};\n","import React, { useEffect, useMemo } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport styled from 'styled-components';\nimport { Box, Button, Theme, Typography } from '@material-ui/core';\nimport { FormikConfig, useFormik } from 'formik';\nimport {\n  productActions,\n  productSelectors,\n  productWorkers,\n} from '../productReducer';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport { useAppTranslation } from '../../../i18n/useAppTranslation';\nimport { getProductResponseSchema, ProductResponseType } from '../types';\nimport { getPathByName } from '../../../router';\nimport { appActions } from '../../../store/app';\nimport { PageTitle } from '../../../components/PageTitle';\nimport { RequestErrorView } from '../../../components/RequestErrorView';\nimport { StyledFieldSet } from '../../../theme/styled';\nimport { NEW_ENTITY_ITEM_ID } from '../../../config/config';\nimport { ProductFormProps } from './types';\nimport { prepareProductFormData, prepareProductRequestData } from './helpers';\nimport { CategoryListSubform } from './components/CategoryListSubform';\n\nexport const ProductForm: React.FC<ProductFormProps> = ({ id }) => {\n  const dispatch = useAppDispatch();\n  const t = useAppTranslation();\n  const productResponse = useAppSelector(productSelectors.getProductResponse);\n  const requestError = useAppSelector(productSelectors.getRequestError);\n  const isLoading = useAppSelector(productSelectors.getIsLoading);\n\n  const isNew = id === NEW_ENTITY_ITEM_ID;\n\n  useEffect(() => {\n    if (!isNew) {\n      dispatch(productWorkers.productFetchData(Number(id)));\n    }\n    return () => {\n      dispatch(productActions.clear());\n    };\n  }, []);\n\n  const formikConfig: FormikConfig<ProductResponseType> = {\n    enableReinitialize: true,\n    initialValues: productResponse\n      ? prepareProductFormData(productResponse)\n      : {\n          id: 0,\n          title: '',\n          description: '',\n          options: '',\n          categories: [],\n        },\n    onSubmit: (values) => {\n      const requestData = prepareProductRequestData(values);\n      if (isNew) {\n        dispatch(productWorkers.productNew(requestData));\n        return;\n      }\n      dispatch(productWorkers.productPatchData(requestData));\n    },\n    validationSchema: getProductResponseSchema(t),\n  };\n\n  const formik = useFormik<ProductResponseType>(formikConfig);\n\n  const handlePreviousBtnClk = () => {\n    const path = getPathByName('productList');\n    dispatch(appActions.redirect(path));\n  };\n\n  const titleRender = (\n    <PageTitle>\n      {isNew\n        ? t('features__product-form__page-new-title')\n        : t('features__product-form__page-edit-title', { id })}\n    </PageTitle>\n  );\n\n  const categoryListSubformRender = useMemo(\n    () => (\n      <CategoryListSubform\n        entityList={formik.values.categories}\n        changeCb={(values) => formik.setFieldValue('categories', values)}\n        isLoading={isLoading}\n      />\n    ),\n    [formik.values.categories, isLoading],\n  );\n\n  const requestErrorRender = requestError ? (\n    <RequestErrorView requestError={requestError} />\n  ) : null;\n\n  const productFormRender = (\n    <form noValidate onSubmit={formik.handleSubmit}>\n      <StyledFieldSet disabled={isLoading} fullWidth={true}>\n        <StyledTextField\n          variant=\"outlined\"\n          fullWidth={true}\n          required\n          label={t('features__product-form__input-label-title')}\n          {...formik.getFieldProps('title')}\n          helperText={formik.errors.title}\n          error={Boolean(formik.errors.title)}\n        />\n\n        <StyledTextField\n          variant=\"outlined\"\n          fullWidth={true}\n          label={t('features__product-form__input-label-description')}\n          {...formik.getFieldProps('description')}\n          helperText={formik.errors.description}\n          error={Boolean(formik.errors.description)}\n        />\n        <StyledTextField\n          variant=\"outlined\"\n          fullWidth={true}\n          label={t('features__product-form__input-label-options')}\n          {...formik.getFieldProps('options')}\n          helperText={formik.errors.options}\n          error={Boolean(formik.errors.options)}\n        />\n      </StyledFieldSet>\n      <CategorySubformWrap>\n        <Typography component={'h3'}>\n          {t('features__product-form__category-list-subform__title')}\n        </Typography>\n        <CategorySubformWrap>{categoryListSubformRender}</CategorySubformWrap>\n      </CategorySubformWrap>\n      <StyledFieldSet disabled={isLoading} fullWidth={true}>\n        <FormElementWrap>\n          <StyledButton\n            type={'submit'}\n            color={'primary'}\n            variant={'contained'}\n            disabled={isLoading}\n          >\n            {t('features__product-form__button-title-save')}\n          </StyledButton>\n          <StyledButton\n            type={'button'}\n            color={'primary'}\n            variant={'contained'}\n            onClick={handlePreviousBtnClk}\n            disabled={isLoading}\n          >\n            {t('features__product-form__button-title-previous')}\n          </StyledButton>\n        </FormElementWrap>\n      </StyledFieldSet>\n    </form>\n  );\n\n  return (\n    <>\n      {titleRender}\n      {requestErrorRender}\n      {productFormRender}\n    </>\n  );\n};\n\nconst StyledTextField = styled(TextField)`\n  margin-top: ${({ theme }) => (theme as Theme).spacing(2)}px;\n`;\n\nconst FormElementWrap = styled(Box)`\n  margin-top: ${({ theme }) => (theme as Theme).spacing(2)}px;\n`;\n\nconst CategorySubformWrap = styled(FormElementWrap)`\n  padding: ${({ theme }) => (theme as Theme).spacing(1)}px;\n`;\n\nconst StyledButton = styled(Button)`\n  &:not(:last-child) {\n    margin-right: ${({ theme }) => (theme as Theme).spacing(2)}px;\n  }\n  min-width: 130px;\n`;\n","import { ProductRequestType, ProductResponseType } from '../types';\n\nexport const prepareProductFormData = (\n  productData: ProductResponseType,\n): ProductResponseType => {\n  return {\n    ...productData,\n    description: productData.description || '',\n    options: productData.options || '',\n  };\n};\n\nexport const prepareProductRequestData = (\n  productData: ProductResponseType,\n): ProductRequestType => {\n  const categories = productData.categories.map((category) => category.id);\n  return {\n    ...productData,\n    categories,\n  };\n};\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { CategoryResponseType } from '../types';\nimport { RequestError } from '../../../store/types';\nimport { CategoryState } from './types';\n\nconst initialState: CategoryState = {\n  categoryResponse: null,\n  isLoading: false,\n  requestError: null,\n};\n\nexport const categorySlice = createSlice({\n  name: 'category',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n    setCategoryResponse: (\n      state,\n      action: PayloadAction<CategoryResponseType | null>,\n    ) => {\n      state.categoryResponse = action.payload;\n    },\n    setRequestError: (state, action: PayloadAction<RequestError | null>) => {\n      state.requestError = action.payload;\n    },\n    clear: (state) => {\n      state.requestError = null;\n      state.categoryResponse = null;\n    },\n  },\n});\n","import { RequestError, RootState } from '../../../store/types';\nimport { CategoryResponseType } from '../types';\n\nexport const getCategoryResponse = (\n  state: RootState,\n): CategoryResponseType | null => state.category.categoryResponse;\n\nexport const getIsLoading = (state: RootState): boolean =>\n  state.category.isLoading;\n\nexport const getRequestError = (state: RootState): RequestError | null =>\n  state.category.requestError;\n","import { CategoryRequestType } from '../types';\nimport {\n  CategoryFetchDataWorker,\n  CategoryNewWorker,\n  CategoryPatchDataWorker,\n  CategoryWorkerType,\n} from './types';\n\nexport const categoryFetchData = (id: number): CategoryFetchDataWorker => ({\n  type: CategoryWorkerType.FETCH_DATA,\n  payload: id,\n});\n\nexport const categoryPatchData = (\n  data: CategoryRequestType,\n): CategoryPatchDataWorker => ({\n  type: CategoryWorkerType.PATCH_DATA,\n  payload: data,\n});\n\nexport const categoryNew = (data: CategoryRequestType): CategoryNewWorker => ({\n  type: CategoryWorkerType.NEW,\n  payload: data,\n});\n","import { RequestError } from '../../../store/types';\nimport { SignUpData } from '../types';\n\nexport interface SignUpState {\n  isLoading: boolean;\n  requestError: RequestError | null;\n}\n\nexport enum SignUpWorkerType {\n  addNewUser = 'signUp/addNewUser',\n}\n\ninterface SignUpWorker<T, P> {\n  type: T;\n  payload: P;\n}\n\nexport type AddNewUserWorker = SignUpWorker<\n  SignUpWorkerType.addNewUser,\n  SignUpData\n>;\n","import { categorySlice } from './slice';\nimport * as selectors from './selectors';\nimport * as workers from './workers';\n\nexport const { actions: categoryActions, reducer: categoryReducer } =\n  categorySlice;\n\nexport const categorySelectors = selectors;\n\nexport const categoryWorkers = workers;\n","import * as yup from 'yup';\nimport { AppTranslationHookTType } from '../../i18n/types';\nimport { appTranslationTStub } from '../../i18n/useAppTranslation';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getCategoryResponseSchema = (t: AppTranslationHookTType) => {\n  return yup.object({\n    id: yup.number().required(),\n    title: yup.string().required(t('validation__required')),\n    description: yup.string().nullable(),\n  });\n};\n\nexport const CategoryResponseSchema =\n  getCategoryResponseSchema(appTranslationTStub);\n\nexport interface CategoryResponseType\n  extends yup.Asserts<typeof CategoryResponseSchema> {}\n\nexport const CategoryRequestSchema = CategoryResponseSchema.shape({});\n\nexport interface CategoryRequestType\n  extends yup.Asserts<typeof CategoryRequestSchema> {}\n","import React, { useEffect } from 'react';\nimport { FormikConfig, useFormik } from 'formik';\nimport styled from 'styled-components';\nimport TextField from '@material-ui/core/TextField';\nimport { Box, Button, Theme } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport {\n  categoryActions,\n  categorySelectors,\n  categoryWorkers,\n} from '../categoryReducer';\nimport { NEW_ENTITY_ITEM_ID } from '../../../config/config';\nimport { PageTitle } from '../../../components/PageTitle';\nimport { useAppTranslation } from '../../../i18n/useAppTranslation';\nimport { CategoryResponseType, getCategoryResponseSchema } from '../types';\nimport { RequestErrorView } from '../../../components/RequestErrorView';\nimport { StyledFieldSet } from '../../../theme/styled';\nimport { getPathByName } from '../../../router';\nimport { appActions } from '../../../store/app';\nimport { CategoryFormProps } from './types';\nimport { prepareCategoryFormData, prepareCategoryRequestData } from './helpers';\n\nexport const CategoryForm: React.FC<CategoryFormProps> = ({ id }) => {\n  const dispatch = useAppDispatch();\n  const isNew = id === NEW_ENTITY_ITEM_ID;\n  const t = useAppTranslation();\n  const categoryResponse = useAppSelector(\n    categorySelectors.getCategoryResponse,\n  );\n  const requestError = useAppSelector(categorySelectors.getRequestError);\n  const isLoading = useAppSelector(categorySelectors.getIsLoading);\n\n  useEffect(() => {\n    if (!isNew) {\n      dispatch(categoryWorkers.categoryFetchData(Number(id)));\n    }\n    return () => {\n      dispatch(categoryActions.clear());\n    };\n  }, []);\n\n  const currentValues: CategoryResponseType = categoryResponse\n    ? prepareCategoryFormData(categoryResponse)\n    : {\n        id: 0,\n        title: '',\n        description: '',\n      };\n\n  const formikConfig: FormikConfig<CategoryResponseType> = {\n    enableReinitialize: true,\n    initialValues: currentValues,\n    onSubmit: (values) => {\n      const requestData = prepareCategoryRequestData(values);\n      if (isNew) {\n        dispatch(categoryWorkers.categoryNew(requestData));\n        return;\n      }\n      dispatch(categoryWorkers.categoryPatchData(requestData));\n    },\n    validationSchema: getCategoryResponseSchema(t),\n  };\n\n  const formik = useFormik<CategoryResponseType>(formikConfig);\n\n  const handlePreviousBtnClk = () => {\n    const path = getPathByName('categoryList');\n    dispatch(appActions.redirect(path));\n  };\n\n  const titleRender = (\n    <PageTitle>\n      {isNew\n        ? t('features__category-form__page-new-title')\n        : t('features__category-form__page-edit-title', { id })}\n    </PageTitle>\n  );\n\n  const requestErrorRender = requestError ? (\n    <RequestErrorView requestError={requestError} />\n  ) : null;\n\n  const categoryFormRender = (\n    <StyledFieldSet disabled={isLoading} fullWidth={true}>\n      <form noValidate onSubmit={formik.handleSubmit}>\n        <StyledTextField\n          variant=\"outlined\"\n          fullWidth={true}\n          required\n          label={t('features__category-form__input-label-title')}\n          {...formik.getFieldProps('title')}\n          helperText={formik.errors.title}\n          error={Boolean(formik.errors.title)}\n        />\n        <StyledTextField\n          variant=\"outlined\"\n          fullWidth={true}\n          label={t('features__category-form__input-label-description')}\n          {...formik.getFieldProps('description')}\n          helperText={formik.errors.description}\n          error={Boolean(formik.errors.description)}\n        />\n        <ButtonWrap>\n          <StyledButton\n            type={'submit'}\n            color={'primary'}\n            variant={'contained'}\n            disabled={isLoading}\n          >\n            {t('features__product-form__button-title-save')}\n          </StyledButton>\n          <StyledButton\n            type={'button'}\n            color={'primary'}\n            variant={'contained'}\n            onClick={handlePreviousBtnClk}\n            disabled={isLoading}\n          >\n            {t('features__product-form__button-title-previous')}\n          </StyledButton>\n        </ButtonWrap>\n      </form>\n    </StyledFieldSet>\n  );\n\n  return (\n    <>\n      {titleRender}\n      {requestErrorRender}\n      {categoryFormRender}\n    </>\n  );\n};\n\nconst StyledTextField = styled(TextField)`\n  margin-top: ${({ theme }) => (theme as Theme).spacing(2)}px;\n`;\nconst ButtonWrap = styled(Box)`\n  margin-top: ${({ theme }) => (theme as Theme).spacing(2)}px;\n`;\n\nconst StyledButton = styled(Button)`\n  &:not(:last-child) {\n    margin-right: ${({ theme }) => (theme as Theme).spacing(2)}px;\n  }\n  min-width: 130px;\n`;\n","import { CategoryRequestType, CategoryResponseType } from '../types';\n\nexport const prepareCategoryFormData = (\n  categoryData: CategoryResponseType,\n): CategoryResponseType => ({\n  ...categoryData,\n  description: categoryData.description || '',\n});\n\nexport const prepareCategoryRequestData = (\n  categoryData: CategoryResponseType,\n): CategoryRequestType => ({\n  ...categoryData,\n});\n","import * as yup from 'yup';\nimport { AppTranslationHookTType } from '../../i18n/types';\nimport { appTranslationTStub } from '../../i18n/useAppTranslation';\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport const getSignUpFormValidationSchema = (t: AppTranslationHookTType) => {\n  return yup.object({\n    name: yup\n      .string()\n      .matches(/^[ЁА-Яёа-яA-Za-z ]*$/, t('page__sign-up__validation-name'))\n      .required(t('validation__required')),\n    email: yup\n      .string()\n      .required(t('validation__required'))\n      .email(t('validation__email')),\n    password: yup\n      .string()\n      .required(t('validation__required'))\n      .min(8, t('validation__min_x_symbol', { x: 8 }))\n      .max(30, t('validation__max_x_symbol', { x: 30 })),\n    password_confirmation: yup\n      .string()\n      .required(t('validation__required'))\n      .oneOf(\n        [yup.ref('password'), null],\n        t('page__sign-up__validation-password-confirm'),\n      ),\n  });\n};\n\nconst SignUpFormValidationSchema =\n  getSignUpFormValidationSchema(appTranslationTStub);\n\nexport interface SignUpData\n  extends yup.Asserts<typeof SignUpFormValidationSchema> {}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RequestError } from '../../../store/types';\nimport { SignUpState } from './types';\n\nconst initialState: SignUpState = {\n  isLoading: false,\n  requestError: null,\n};\n\nexport const signUpSlice = createSlice({\n  name: 'signUp',\n  initialState,\n  reducers: {\n    setIsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload;\n    },\n    setRequestError: (state, action: PayloadAction<RequestError | null>) => {\n      state.requestError = action.payload;\n    },\n  },\n});\n","import { SignUpData } from '../types';\nimport { AddNewUserWorker, SignUpWorkerType } from './types';\n\nexport const addNewUser = (signUpData: SignUpData): AddNewUserWorker => ({\n  type: SignUpWorkerType.addNewUser,\n  payload: signUpData,\n});\n","import { RequestError, RootState } from '../../../store/types';\n\nexport const getIsLoading = (state: RootState): boolean =>\n  state.signUp.isLoading;\n\nexport const getRequestError = (state: RootState): RequestError | null =>\n  state.signUp.requestError;\n","import { signUpSlice } from './slice';\nimport * as workers from './workers';\nimport * as selectors from './selectors';\n\nexport const { actions: signUpAction, reducer: signUpReducer } = signUpSlice;\n\nexport const signUpWorkers = workers;\n\nexport const signUpSelectors = selectors;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { Errors, QueryFieldsErrorProps } from './types';\n\nconst IMPOSSIBLE_TO_CREATE_NEW_USER_WITH_SUCH_DATA_RESPONSE_STATUS_ERROR = 422;\n\nexport const QueryFieldsError: React.FC<QueryFieldsErrorProps> = ({\n  requestError,\n}) => {\n  const status = requestError.responseData?.status;\n  const errors: Errors = requestError.responseData?.data?.errors;\n  return IMPOSSIBLE_TO_CREATE_NEW_USER_WITH_SUCH_DATA_RESPONSE_STATUS_ERROR ===\n    status ? (\n    <>\n      <Box>\n        {Object.entries(errors).map((error) => (\n          <Box key={error[0]}>\n            {error[0]}: {error[1].join(', ')}\n          </Box>\n        ))}\n      </Box>\n    </>\n  ) : null;\n};\n","import React from 'react';\nimport { FormikConfig, useFormik } from 'formik';\nimport styled from 'styled-components';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport { Container, Typography } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport { getSignUpFormValidationSchema, SignUpData } from '../types';\nimport { useAppTranslation } from '../../../i18n/useAppTranslation';\nimport { StyledFieldSet } from '../../../theme/styled';\nimport { getPathByName } from '../../../router';\nimport { appActions } from '../../../store/app';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport { signUpSelectors, signUpWorkers } from '../signUpReducer';\nimport { RequestErrorView } from '../../../components/RequestErrorView';\nimport { RequestErrorMessageList } from '../../../components/RequestErrorView/types';\nimport { QueryFieldsError } from './QueryFieldsError';\n\nconst initialValues: SignUpData = {\n  name: '',\n  email: '',\n  password: '',\n  password_confirmation: '',\n};\n\nconst localOverrideRequestErrorMessageList: RequestErrorMessageList = {\n  422: 'page__sign-up__request-error-status-422',\n};\n\nexport const SignUpForm: React.FC = () => {\n  const t = useAppTranslation();\n\n  const validationSchema = getSignUpFormValidationSchema(t);\n  const isLoading = useAppSelector(signUpSelectors.getIsLoading);\n  const requestError = useAppSelector(signUpSelectors.getRequestError);\n\n  const formikConfig: FormikConfig<SignUpData> = {\n    enableReinitialize: true,\n    initialValues,\n    onSubmit: (values) => {\n      dispatch(signUpWorkers.addNewUser(values));\n    },\n    validationSchema,\n  };\n\n  const formik = useFormik(formikConfig);\n  const dispatch = useAppDispatch();\n\n  const handleSignInLinkClk = (e: React.MouseEvent) => {\n    e.preventDefault();\n    const path = getPathByName('signIn');\n    dispatch(appActions.redirect(path));\n  };\n\n  const requestErrorRender = requestError ? (\n    <RequestErrorView\n      requestError={requestError}\n      localOverrideRequestErrorMessageList={\n        localOverrideRequestErrorMessageList\n      }\n    >\n      <QueryFieldsError requestError={requestError} />\n    </RequestErrorView>\n  ) : null;\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Wrap>\n        <StyledAvatar>\n          <LockOutlinedIcon />\n        </StyledAvatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          {t('page__sign-up__page-title')}\n        </Typography>\n        <StyledFieldSet disabled={isLoading} fullWidth={true}>\n          <Form noValidate onSubmit={formik.handleSubmit} autoComplete={'off'}>\n            {requestErrorRender}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type=\"text\"\n              label={t('page__sign-up__form-label__name')}\n              {...formik.getFieldProps('name')}\n              helperText={formik.touched.name && formik.errors.name}\n              error={Boolean(formik.touched.name && formik.errors.name)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type=\"email\"\n              label={t('page__sign-up__form-label__email')}\n              {...formik.getFieldProps('email')}\n              helperText={formik.touched.email && formik.errors.email}\n              error={Boolean(formik.touched.email && formik.errors.email)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type=\"password\"\n              label={t('page__sign-up__form-label__password')}\n              {...formik.getFieldProps('password')}\n              helperText={formik.touched.password && formik.errors.password}\n              error={Boolean(formik.touched.password && formik.errors.password)}\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type=\"password\"\n              label={t('page__sign-up__form-label__password-confirm')}\n              {...formik.getFieldProps('password_confirmation')}\n              helperText={\n                formik.touched.password_confirmation &&\n                formik.errors.password_confirmation\n              }\n              error={Boolean(\n                formik.touched.password_confirmation &&\n                  formik.errors.password_confirmation,\n              )}\n            />\n            <StyledButton\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              disabled={isLoading}\n            >\n              {t('page__sign-up__form-label__submit-btn')}\n            </StyledButton>\n          </Form>\n        </StyledFieldSet>\n        <Typography>\n          <Link href=\"#\" onClick={handleSignInLinkClk}>\n            {t('page__sign-up__sign-in-link')}\n          </Link>\n        </Typography>\n      </Wrap>\n    </Container>\n  );\n};\n\nconst Wrap = styled(Box)`\n  margin-top: ${({ theme }) => theme.spacing(8)}px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst StyledAvatar = styled(Avatar)`\n  margin: ${({ theme }) => theme.spacing(1)}px;\n  background-color: ${({ theme }) => theme.palette.secondary.main};\n`;\n\nconst Form = styled.form`\n  width: 100%;\n  margin-top: ${({ theme }) => theme.spacing(1)}px;\n`;\n\nconst StyledButton = styled(Button)`\n  margin: ${({ theme }) => theme.spacing(3, 0, 2)};\n`;\n","import { HomePage } from '../pages/HomePage';\nimport { SignInPage } from '../pages/SignInPage';\nimport { RouteNotFoundPage } from '../pages/RouteNotFoundPage';\nimport { ProductListPage } from '../pages/ProductListPage';\nimport { ProductPage } from '../pages/ProductPage';\nimport { CategoryListPage } from '../pages/CategoryListPage';\nimport { CategoryPage } from '../pages/CategoryPage';\nimport { SignUpPage } from '../pages/SignUpPage';\nimport { RouteItem } from './types';\n\nexport const routes: RouteItem[] = [\n  {\n    name: 'home',\n    path: '/home',\n    exact: true,\n    private: true,\n    always: false,\n    component: HomePage,\n  },\n  {\n    name: 'signIn',\n    path: '/sign-in',\n    exact: true,\n    private: false,\n    always: false,\n    component: SignInPage,\n  },\n  {\n    name: 'signUp',\n    path: '/sign-up',\n    exact: true,\n    private: false,\n    always: true,\n    component: SignUpPage,\n  },\n  {\n    name: 'productList',\n    path: '/products',\n    exact: true,\n    private: true,\n    always: false,\n    component: ProductListPage,\n  },\n  {\n    name: 'product',\n    path: '/products/:id',\n    exact: true,\n    private: true,\n    always: false,\n    component: ProductPage,\n  },\n  {\n    name: 'categoryList',\n    path: '/category',\n    exact: true,\n    private: true,\n    always: false,\n    component: CategoryListPage,\n  },\n  {\n    name: 'category',\n    path: '/category/:id',\n    exact: true,\n    private: true,\n    always: false,\n    component: CategoryPage,\n  },\n  {\n    name: 'routeNotFound',\n    path: '*',\n    exact: false,\n    private: false,\n    always: true,\n    component: RouteNotFoundPage,\n  },\n];\n","import * as yup from 'yup';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\n\nexport const useSignInValidationSchema = (): yup.AnyObjectSchema => {\n  const t = useAppTranslation();\n\n  return yup.object({\n    email: yup\n      .string()\n      .required(t('validation__required'))\n      .email(t('validation__email')),\n    password: yup\n      .string()\n      .required(t('validation__required'))\n      .min(8, t('validation__min_x_symbol', { x: 8 }))\n      .max(30, t('validation__max_x_symbol', { x: 30 })),\n  });\n};\n","import React from 'react';\nimport { SignUpForm } from '../../features/signUp/SignUpForm';\n\nexport const SignUpPage: React.FC = () => {\n  return (\n    <>\n      <SignUpForm />\n    </>\n  );\n};\n","import React from 'react';\nimport { ProductListForm } from '../../features/productList/ProductListForm';\n\nexport const ProductListPage: React.FC = () => {\n  return (\n    <>\n      <ProductListForm />\n    </>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { ProductForm } from '../../features/product/ProductForm';\n\nexport const ProductPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  return <ProductForm id={id} />;\n};\n","import React from 'react';\nimport { CategoryListForm } from '../../features/categoryList/CategoryListForm';\n\nexport const CategoryListPage: React.FC = () => {\n  return (\n    <>\n      <CategoryListForm />\n    </>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport { CategoryForm } from '../../features/category/CategoryForm';\n\nexport const CategoryPage: React.FC = () => {\n  const { id } = useParams<{ id: string }>();\n  return <CategoryForm id={id} />;\n};\n","import React from 'react';\n\nexport const RouteNotFoundPage: React.FC = () => {\n  return <div>routeNotFound Page</div>;\n};\n","import { generatePath } from 'react-router';\nimport { RouteItem, RouteParams, RouterPathNames } from './types';\nimport { routes } from './routes';\n\nexport const getPathByName = (\n  name: RouterPathNames,\n  routeParams: RouteParams | null = null,\n): string => {\n  const routeItem: RouteItem | undefined = routes.find(\n    (route) =>\n      route.name.toString().toLowerCase() === name.toString().toLowerCase(),\n  );\n  if (routeItem) {\n    if (!routeParams) {\n      return routeItem.path;\n    }\n    return generatePath(routeItem.path, routeParams);\n  }\n  throw new Error('getPathByName: Unknown route!');\n};\n","import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport { useAppSelector } from '../store/hooks';\nimport { appSelectors } from '../store/app';\nimport { logger } from '../utils/logger';\n\nexport const RedirectExecutor: React.FC = () => {\n  const redirectUrl = useAppSelector(appSelectors.getRedirectUrl);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (redirectUrl) {\n      logger('RedirectExecutor', 'redirectTo:', redirectUrl);\n      history.push(redirectUrl.path);\n    }\n  }, [redirectUrl]);\n\n  return null;\n};\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { useAppSelector } from '../store/hooks';\nimport { authSelectors } from '../store/auth';\nimport { routes } from './routes';\nimport { RouteItem } from './types';\nimport { getPathByName } from './helpers';\nimport { RedirectExecutor } from './RedirectExecutor';\n\nexport const RoutesStructure: React.FC = () => {\n  const userIsAuthenticated = useAppSelector(authSelectors.getIsAuthenticated);\n\n  const getRouteAction = (route: RouteItem) => {\n    //вся конфигурация роутов задана в router/routes\n    //если  для компонента  задано showAlways то немедленно выводим\n    if (route.always) {\n      return <route.component />;\n    }\n    //проверяем предназначен ли компонент для работы, если мы вошли в систему\n    if (route.private) {\n      //если да, то проверяем залогинены ли мы\n      //и если то показываем его\n      //иначе делаем редирект на страницу логина\n      if (userIsAuthenticated) {\n        return <route.component />;\n      }\n      return <Redirect to={getPathByName('signIn')} />;\n    }\n    //если нет, то то проверяем залогинены ли мы\n    //и если да то делаем редирект на главную страницу\n    //иначе показываем компонент\n    if (userIsAuthenticated) {\n      return <Redirect to={getPathByName('home')} />;\n    }\n    return <route.component />;\n  };\n\n  return (\n    <>\n      <RedirectExecutor />\n      <Switch>\n        <Redirect from={'/'} to={getPathByName('signIn')} exact={true} />;\n        {routes.map((route) => (\n          <Route path={route.path} exact={route.exact} key={route.name}>\n            {getRouteAction(route)}\n          </Route>\n        ))}\n      </Switch>\n    </>\n  );\n};\n","import { AxiosRequestConfig } from 'axios';\nimport { ProductRequestType } from '../types';\n\nexport const getProductFetchDataRequestConfig = (\n  id: number,\n): AxiosRequestConfig => ({\n  url: `/products/${id}`,\n  method: 'get',\n});\n\nexport const getProductPatchDataRequestConfig = (\n  id: number,\n  data: ProductRequestType,\n): AxiosRequestConfig => ({\n  url: `/products/${id}`,\n  method: 'put',\n  data,\n});\n\nexport const getNewProductRequestConfig = (\n  data: ProductRequestType,\n): AxiosRequestConfig => ({\n  url: `/products`,\n  method: 'post',\n  data,\n});\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { logger } from '../../../utils/logger';\nimport { getErrorData } from '../../../store/helpers';\nimport { ProductResponseType, ProductResponseSchema } from '../types';\nimport { requestExecutor } from '../../../store/sagas';\nimport { appActions } from '../../../store/app';\nimport { getPathByName } from '../../../router';\nimport { FlashMessage } from '../../../store/app/types';\nimport {\n  ProductFetchDataWorker,\n  ProductNewWorker,\n  ProductPatchDataWorker,\n  ProductWorkerType,\n} from './types';\nimport {\n  getNewProductRequestConfig,\n  getProductFetchDataRequestConfig,\n  getProductPatchDataRequestConfig,\n} from './helpers';\nimport { productActions } from './index';\n\nexport function* productWatcher(): SagaIterator {\n  yield takeEvery(ProductWorkerType.FETCH_DATA, productFetchDataWorker);\n  yield takeEvery(ProductWorkerType.PATCH_DATA, productPatchDataWorker);\n  yield takeEvery(ProductWorkerType.NEW, productNewWorker);\n}\n\nexport function* productFetchDataWorker(\n  action: ProductFetchDataWorker,\n): SagaIterator {\n  try {\n    yield put(productActions.setIsLoading(true));\n    yield put(productActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getProductFetchDataRequestConfig> =\n      yield call(getProductFetchDataRequestConfig, action.payload);\n    const result: ProductResponseType = yield call(\n      requestExecutor,\n      requestConfig,\n      ProductResponseSchema,\n    );\n    yield put(productActions.setProductResponse(result));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'fetchDataWorker', errorData);\n    yield put(productActions.setRequestError(errorData));\n  } finally {\n    yield put(productActions.setIsLoading(false));\n  }\n}\n\nexport function* productPatchDataWorker(\n  action: ProductPatchDataWorker,\n): SagaIterator {\n  try {\n    yield put(productActions.setIsLoading(true));\n    yield put(productActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getProductPatchDataRequestConfig> =\n      yield call(\n        getProductPatchDataRequestConfig,\n        action.payload.id,\n        action.payload,\n      );\n    yield call(requestExecutor, requestConfig, null);\n    const path: ReturnType<typeof getPathByName> = yield call(\n      getPathByName,\n      'productList',\n    );\n    yield put(appActions.redirect(path));\n    const msg: FlashMessage = {\n      msg: 'features__product-form__msg-product-update',\n      type: 'success',\n      data: {\n        id: action.payload.id,\n      },\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'fetchDataWorker', errorData);\n    yield put(productActions.setRequestError(errorData));\n  } finally {\n    yield put(productActions.setIsLoading(false));\n  }\n}\n\nexport function* productNewWorker(action: ProductNewWorker): SagaIterator {\n  try {\n    yield put(productActions.setIsLoading(true));\n    yield put(productActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getNewProductRequestConfig> =\n      yield call(getNewProductRequestConfig, action.payload);\n    yield call(requestExecutor, requestConfig, null);\n    const path: ReturnType<typeof getPathByName> = yield call(\n      getPathByName,\n      'productList',\n    );\n    yield put(appActions.redirect(path));\n    const msg: FlashMessage = {\n      msg: 'features__product-form__msg-product-add',\n      type: 'success',\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'fetchDataWorker', errorData);\n    yield put(productActions.setRequestError(errorData));\n  } finally {\n    yield put(productActions.setIsLoading(false));\n  }\n}\n","import * as yup from 'yup';\nimport { getCommonResponseSchemaFieldsForAnEntityList } from '../../types/helpers';\n\nexport const CategoryListItemSchema = yup.object({\n  id: yup.number().required(),\n  title: yup.string().required(),\n  description: yup.string().nullable(),\n});\n\nexport interface CategoryListItem\n  extends yup.Asserts<typeof CategoryListItemSchema> {}\n\nexport type CategoryListItemKeys = keyof CategoryListItem;\n\nexport const CategoryListResponseSchema = yup.object({\n  data: yup.array(CategoryListItemSchema).required(),\n  ...getCommonResponseSchemaFieldsForAnEntityList(),\n});\n\nexport interface CategoryListResponseType\n  extends yup.Asserts<typeof CategoryListResponseSchema> {}\n","import { AxiosRequestConfig } from 'axios';\nimport { CategoryListRequestOptions } from './types';\n\nexport const getCategoryListRequestConfig = (\n  requestOptions: CategoryListRequestOptions,\n): AxiosRequestConfig => ({\n  url: '/categories',\n  method: 'get',\n  params: requestOptions,\n});\n\nexport const getDeleteCategoryRequestConfig = (\n  id: number,\n): AxiosRequestConfig => ({\n  url: `/categories/${id}`,\n  method: 'delete',\n});\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, takeEvery, select } from 'redux-saga/effects';\nimport { getErrorData } from '../../../store/helpers';\nimport { logger } from '../../../utils/logger';\nimport { CategoryListResponseSchema, CategoryListResponseType } from '../types';\nimport { requestExecutor } from '../../../store/sagas';\nimport { FlashMessage } from '../../../store/app/types';\nimport { appActions } from '../../../store/app';\nimport {\n  CategoryListChangePerPageWorker,\n  CategoryListDeleteCategoryWorker,\n  CategoryListGoToPageWorker,\n  CategoryListSearchWorker,\n  CategoryListSortWorker,\n  CategoryListWorkerType,\n} from './types';\nimport {\n  getCategoryListRequestConfig,\n  getDeleteCategoryRequestConfig,\n} from './helpers';\nimport { categoryListActions, categoryListSelectors } from './index';\n\nexport function* categoryListWatcher(): SagaIterator {\n  yield takeEvery(CategoryListWorkerType.FETCH_DATA, fetchDataWorker);\n  yield takeEvery(CategoryListWorkerType.SEARCH, searchWorker);\n  yield takeEvery(CategoryListWorkerType.SORT, sortWorker);\n  yield takeEvery(CategoryListWorkerType.GO_TO_PAGE, goToPageWorker);\n  yield takeEvery(CategoryListWorkerType.CHANGE_PER_PAGE, changePerPageWorker);\n  yield takeEvery(CategoryListWorkerType.DELETE, deleteCategoryWorker);\n}\n\nexport function* fetchDataWorker(): SagaIterator {\n  try {\n    yield put(categoryListActions.setIsLoading(true));\n    yield put(categoryListActions.setRequestError(null));\n    const requestOptions = yield select(\n      categoryListSelectors.getRequestOptions,\n    );\n    const requestConfig: ReturnType<typeof getCategoryListRequestConfig> =\n      yield call(getCategoryListRequestConfig, requestOptions);\n    const result: CategoryListResponseType = yield call(\n      requestExecutor,\n      requestConfig,\n      CategoryListResponseSchema,\n    );\n    yield call(logger, 'CategoryList fetchDataWorker', result);\n    yield put(categoryListActions.setCategoryListResponse(result));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'CategoryList fetchDataWorker', errorData);\n    yield put(categoryListActions.setRequestError(errorData));\n  } finally {\n    yield put(categoryListActions.setIsLoading(false));\n  }\n}\n\nexport function* searchWorker(action: CategoryListSearchWorker): SagaIterator {\n  yield put(\n    categoryListActions.setRequestOptions({\n      search: action.payload,\n      page: 1,\n      sort_field: 'id',\n      sort_asc: 1,\n    }),\n  );\n  yield call(fetchDataWorker);\n}\n\nexport function* sortWorker(action: CategoryListSortWorker): SagaIterator {\n  yield put(categoryListActions.sort(action.payload));\n  yield call(fetchDataWorker);\n}\n\nexport function* goToPageWorker(\n  action: CategoryListGoToPageWorker,\n): SagaIterator {\n  yield put(categoryListActions.setRequestOptions({ page: action.payload }));\n  yield call(fetchDataWorker);\n}\n\nexport function* changePerPageWorker(\n  action: CategoryListChangePerPageWorker,\n): SagaIterator {\n  yield put(\n    categoryListActions.setRequestOptions({\n      per_page: action.payload,\n      page: 1,\n    }),\n  );\n  yield call(fetchDataWorker);\n}\n\nexport function* deleteCategoryWorker(\n  action: CategoryListDeleteCategoryWorker,\n): SagaIterator {\n  try {\n    yield put(categoryListActions.setIsLoading(true));\n    yield put(categoryListActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getDeleteCategoryRequestConfig> =\n      yield call(getDeleteCategoryRequestConfig, action.payload);\n    yield call(requestExecutor, requestConfig, null);\n    yield call(fetchDataWorker);\n\n    const categoryListResponse: ReturnType<\n      typeof categoryListSelectors.getCategoryListResponse\n    > = yield select(categoryListSelectors.getCategoryListResponse);\n    if (categoryListResponse) {\n      const isEmpty = categoryListResponse.data.length === 0;\n      const isNotLastPage =\n        categoryListResponse.current_page > categoryListResponse.last_page;\n      if (isEmpty && isNotLastPage) {\n        yield put(\n          categoryListActions.setRequestOptions({\n            page: categoryListResponse.last_page,\n          }),\n        );\n        yield call(fetchDataWorker);\n      }\n    }\n\n    const msg: FlashMessage = {\n      msg: 'features__category-list-form__msg-successfully-deleted-category',\n      type: 'success',\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'CategoryList fetchDataWorker', errorData);\n    yield put(categoryListActions.setRequestError(errorData));\n  } finally {\n    yield put(categoryListActions.setIsLoading(false));\n  }\n}\n","import { AxiosRequestConfig } from 'axios';\nimport { CategoryRequestType } from '../types';\n\nexport const getCategoryFetchDataRequestConfig = (\n  id: number,\n): AxiosRequestConfig => ({\n  url: `/categories/${id}`,\n  method: 'get',\n});\n\nexport const getCategoryPatchDataRequestConfig = (\n  id: number,\n  data: CategoryRequestType,\n): AxiosRequestConfig => ({\n  url: `/categories/${id}`,\n  method: 'put',\n  data,\n});\n\nexport const getNewCategoryRequestConfig = (\n  data: CategoryRequestType,\n): AxiosRequestConfig => ({\n  url: `/categories`,\n  method: 'post',\n  data,\n});\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { logger } from '../../../utils/logger';\nimport { getErrorData } from '../../../store/helpers';\nimport { CategoryResponseSchema, CategoryResponseType } from '../types';\nimport { requestExecutor } from '../../../store/sagas';\nimport { productActions } from '../../product/productReducer';\nimport { getPathByName } from '../../../router';\nimport { appActions } from '../../../store/app';\nimport { FlashMessage } from '../../../store/app/types';\nimport {\n  CategoryFetchDataWorker,\n  CategoryNewWorker,\n  CategoryPatchDataWorker,\n  CategoryWorkerType,\n} from './types';\nimport {\n  getCategoryFetchDataRequestConfig,\n  getCategoryPatchDataRequestConfig,\n  getNewCategoryRequestConfig,\n} from './helpers';\nimport { categoryActions } from './index';\n\nexport function* categoryWatcher(): SagaIterator {\n  yield takeEvery(CategoryWorkerType.FETCH_DATA, categoryFetchDataWorker);\n  yield takeEvery(CategoryWorkerType.PATCH_DATA, categoryPatchDataWorker);\n  yield takeEvery(CategoryWorkerType.NEW, categoryNewWorker);\n}\n\nexport function* categoryFetchDataWorker(\n  action: CategoryFetchDataWorker,\n): SagaIterator {\n  try {\n    yield put(categoryActions.setIsLoading(true));\n    yield put(categoryActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getCategoryFetchDataRequestConfig> =\n      yield call(getCategoryFetchDataRequestConfig, action.payload);\n\n    const result: CategoryResponseType = yield call(\n      requestExecutor,\n      requestConfig,\n      CategoryResponseSchema,\n    );\n\n    yield put(categoryActions.setCategoryResponse(result));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'categoryFetchDataWorker', errorData);\n    yield put(categoryActions.setRequestError(errorData));\n  } finally {\n    yield put(categoryActions.setIsLoading(false));\n  }\n}\n\nexport function* categoryPatchDataWorker(\n  action: CategoryPatchDataWorker,\n): SagaIterator {\n  try {\n    yield put(categoryActions.setIsLoading(true));\n    yield put(categoryActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getCategoryPatchDataRequestConfig> =\n      yield call(\n        getCategoryPatchDataRequestConfig,\n        action.payload.id,\n        action.payload,\n      );\n    yield call(requestExecutor, requestConfig, null);\n    const path: ReturnType<typeof getPathByName> = yield call(\n      getPathByName,\n      'categoryList',\n    );\n    yield put(appActions.redirect(path));\n    const msg: FlashMessage = {\n      msg: 'features__category-form__msg-category-update',\n      type: 'success',\n      data: {\n        id: action.payload.id,\n      },\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'fetchDataWorker', errorData);\n    yield put(productActions.setRequestError(errorData));\n  } finally {\n    yield put(categoryActions.setIsLoading(false));\n  }\n}\n\nexport function* categoryNewWorker(action: CategoryNewWorker): SagaIterator {\n  try {\n    yield put(categoryActions.setIsLoading(true));\n    yield put(categoryActions.setRequestError(null));\n    const requestConfig: ReturnType<typeof getNewCategoryRequestConfig> =\n      yield call(getNewCategoryRequestConfig, action.payload);\n    yield call(requestExecutor, requestConfig, null);\n    const path: ReturnType<typeof getPathByName> = yield call(\n      getPathByName,\n      'categoryList',\n    );\n    yield put(appActions.redirect(path));\n    const msg: FlashMessage = {\n      msg: 'features__category-form__msg-category-add',\n      type: 'success',\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'fetchDataWorker', errorData);\n    yield put(productActions.setRequestError(errorData));\n  } finally {\n    yield put(categoryActions.setIsLoading(false));\n  }\n}\n","import { AxiosRequestConfig } from 'axios';\nimport { SignUpData } from '../types';\n\nexport const getSignUpAddNewUserRequestConfig = (\n  signUpData: SignUpData,\n): AxiosRequestConfig => ({\n  url: '/auth/register',\n  method: 'post',\n  data: signUpData,\n});\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { logger } from '../../../utils/logger';\nimport { getErrorData } from '../../../store/helpers';\nimport { requestExecutor } from '../../../store/sagas';\nimport { FlashMessage } from '../../../store/app/types';\nimport { appActions } from '../../../store/app';\nimport { getPathByName } from '../../../router';\nimport { AddNewUserWorker, SignUpWorkerType } from './types';\nimport { getSignUpAddNewUserRequestConfig } from './helpers';\nimport { signUpAction } from './index';\n\nexport function* signUpWatcher(): SagaIterator {\n  yield takeEvery(SignUpWorkerType.addNewUser, addNewUserWorker);\n}\n\nexport function* addNewUserWorker(action: AddNewUserWorker): SagaIterator {\n  try {\n    yield put(signUpAction.setIsLoading(true));\n    yield put(signUpAction.setRequestError(null));\n    const requestConfig: ReturnType<typeof getSignUpAddNewUserRequestConfig> =\n      yield call(getSignUpAddNewUserRequestConfig, action.payload);\n    yield call(requestExecutor, requestConfig, null);\n    const msg: FlashMessage = {\n      msg: 'page__sign-up__add-user-success',\n      type: 'success',\n      data: {\n        name: action.payload.name,\n      },\n    };\n    yield put(appActions.addFlashMessage(msg));\n    const path = getPathByName('home');\n    yield put(appActions.redirect(path));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'fetchDataWorker', errorData);\n    yield put(signUpAction.setRequestError(errorData));\n    const msg: FlashMessage = {\n      msg: 'page__sign-up__add-user-error',\n      type: 'error',\n      data: {\n        name: action.payload.name,\n      },\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } finally {\n    yield put(signUpAction.setIsLoading(false));\n  }\n}\n","import * as yup from 'yup';\n\nexport interface UserCredentials {\n  email: string;\n  password: string;\n}\n\nexport const UserDataValidationSchema = yup.object({\n  id: yup.string().required(),\n  name: yup.string().required(),\n  email: yup.string().required(),\n});\n\nexport interface UserData\n  extends yup.Asserts<typeof UserDataValidationSchema> {}\n","import { AxiosRequestConfig } from 'axios';\nimport { UserCredentials } from '../../types/userData';\nimport { getDefaultRequestConfig } from '../helpers';\n\nexport const getTokenRequestConfig = (\n  payload: UserCredentials,\n): AxiosRequestConfig => ({\n  ...getDefaultRequestConfig(),\n  method: 'post',\n  url: '/auth/login',\n  data: payload,\n});\n\nexport const getUserDataRequestConfig = (): AxiosRequestConfig => ({\n  ...getDefaultRequestConfig(),\n  method: 'get',\n  url: '/auth/user',\n});\n\nexport const getTokenRevokeRequestConfig = (): AxiosRequestConfig => ({\n  ...getDefaultRequestConfig(),\n  method: 'get',\n  url: 'auth/logout',\n});\n","import { SagaIterator } from 'redux-saga';\nimport { call, put, SagaReturnType, takeEvery } from 'redux-saga/effects';\nimport { AxiosResponse } from 'axios';\nimport { logger } from '../../utils/logger';\nimport { ACCESS_TOKEN_LS_KEY } from '../../config/config';\nimport {\n  addBearerTokenToRequestConfig,\n  getErrorData,\n  validateData,\n} from '../helpers';\nimport { UserData, UserDataValidationSchema } from '../../types/userData';\nimport { ajax } from '../../api/transport';\nimport { FlashMessage } from '../app/types';\nimport { appActions } from '../app';\nimport { AuthSagaWorkerType, AuthSignInWorker } from './types';\nimport {\n  getTokenRequestConfig,\n  getTokenRevokeRequestConfig,\n  getUserDataRequestConfig,\n} from './helpers';\nimport { authActions } from './index';\n\nexport function* authWatcher(): SagaIterator {\n  yield takeEvery(AuthSagaWorkerType.SIGN_IN_WORKER, signInWorker);\n  yield takeEvery(AuthSagaWorkerType.GET_USER_DATA, getUserDataWorker);\n  yield takeEvery(AuthSagaWorkerType.SIGN_OUT, signOutWorker);\n}\n\nexport function* signInWorker(action: AuthSignInWorker): SagaIterator {\n  try {\n    yield put(authActions.setIsLoading(true));\n    yield put(authActions.SetUserData(null));\n    yield put(authActions.SetRequestError(null));\n    const responseToTokenRequest: AxiosResponse<{ token: string }> = yield call(\n      ajax,\n      getTokenRequestConfig(action.payload),\n    );\n    const token = responseToTokenRequest.data.token;\n    yield call(\n      [localStorage, localStorage.setItem],\n      ACCESS_TOKEN_LS_KEY,\n      token,\n    );\n    const responseToUserDataRequest: AxiosResponse<UserData> = yield call(\n      ajax,\n      addBearerTokenToRequestConfig(token, getUserDataRequestConfig()),\n    );\n    yield call(\n      validateData,\n      UserDataValidationSchema,\n      responseToUserDataRequest.data,\n    );\n    yield put(authActions.SetUserData(responseToUserDataRequest.data));\n    yield put(authActions.setIsAuthenticated(true));\n    const msg: FlashMessage = {\n      msg: 'page__sign-in__msg__successfully-logged-in',\n      type: 'success',\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } catch (e) {\n    const errorData: ReturnType<typeof getErrorData> = yield call(\n      getErrorData,\n      e,\n    );\n    yield call(logger, 'signUpWorker errors', errorData);\n    yield put(authActions.SetRequestError(errorData));\n    const msg: FlashMessage = {\n      msg: 'page__sign-in__msg__login-failed',\n      type: 'error',\n    };\n    yield put(appActions.addFlashMessage(msg));\n  } finally {\n    yield put(authActions.setIsLoading(false));\n  }\n}\n\nexport function* getUserDataWorker(): SagaIterator {\n  try {\n    yield put(authActions.SetIsLoadingUserData(true));\n    const token: SagaReturnType<typeof localStorage.getItem> = yield call(\n      [localStorage, localStorage.getItem],\n      ACCESS_TOKEN_LS_KEY,\n    );\n    const responseToUserDataRequest: AxiosResponse<UserData> = yield call(\n      ajax,\n      addBearerTokenToRequestConfig(token || '', getUserDataRequestConfig()),\n    );\n    yield call(\n      validateData,\n      UserDataValidationSchema,\n      responseToUserDataRequest.data,\n    );\n    yield put(authActions.SetUserData(responseToUserDataRequest.data));\n    yield put(authActions.setIsAuthenticated(true));\n  } catch (e) {\n    yield call(logger, 'getUserDataWorker errors', getErrorData(e));\n  } finally {\n    yield put(authActions.SetIsLoadingUserData(false));\n  }\n}\n\nexport function* signOutWorker(): SagaIterator {\n  try {\n    yield put(authActions.setIsLoading(true));\n    yield put(authActions.SetUserData(null));\n    yield put(authActions.setIsAuthenticated(false));\n\n    const msg: FlashMessage = {\n      msg: 'action__sign-out',\n      type: 'success',\n    };\n    yield put(appActions.addFlashMessage(msg));\n\n    const token: SagaReturnType<typeof localStorage.getItem> = yield call(\n      [localStorage, localStorage.getItem],\n      ACCESS_TOKEN_LS_KEY,\n    );\n    yield call(\n      ajax,\n      addBearerTokenToRequestConfig(token || '', getTokenRevokeRequestConfig()),\n    );\n\n    yield call([localStorage, localStorage.removeItem], ACCESS_TOKEN_LS_KEY);\n  } catch (e) {\n    yield call(logger, 'signOutWorker errors', getErrorData(e));\n  } finally {\n    yield put(authActions.setIsLoading(false));\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit';\nimport createSagaMiddleware, { SagaIterator } from 'redux-saga';\nimport { all, AllEffect } from 'redux-saga/effects';\nimport { productListReducer } from '../features/productList/ProductListReducer';\nimport { productListWatcher } from '../features/productList/ProductListReducer/sagas';\nimport { productReducer } from '../features/product/productReducer';\nimport { productWatcher } from '../features/product/productReducer/sagas';\nimport { categoryListReducer } from '../features/categoryList/categoryListReducer';\nimport { categoryListWatcher } from '../features/categoryList/categoryListReducer/sagas';\nimport { categoryReducer } from '../features/category/categoryReducer';\nimport { categoryWatcher } from '../features/category/categoryReducer/sagas';\nimport { signUpReducer } from '../features/signUp/signUpReducer';\nimport { signUpWatcher } from '../features/signUp/signUpReducer/sagas';\nimport { appReducer } from './app';\nimport { authReducer } from './auth';\nimport { authWatcher } from './auth/sagas';\n\nconst reduxSagaMonitorOptions = {};\nconst sagaMiddleware = createSagaMiddleware(reduxSagaMonitorOptions);\n\nconst middlewares = [sagaMiddleware];\n\nexport const store = configureStore({\n  devTools: true,\n  reducer: {\n    app: appReducer,\n    auth: authReducer,\n    productList: productListReducer,\n    product: productReducer,\n    categoryList: categoryListReducer,\n    category: categoryReducer,\n    signUp: signUpReducer,\n  },\n  middleware: [...middlewares],\n});\n\nexport function* rootSaga(): Generator<AllEffect<SagaIterator<any>>> {\n  yield all([\n    authWatcher(),\n    productListWatcher(),\n    productWatcher(),\n    categoryListWatcher(),\n    categoryWatcher(),\n    signUpWatcher(),\n  ]);\n}\n\nsagaMiddleware.run(rootSaga);\n","import { LinearProgress } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useAppSelector } from '../../store/hooks';\nimport { authSelectors } from '../../store/auth';\nimport { productListSelectors } from '../../features/productList/ProductListReducer';\nimport { productSelectors } from '../../features/product/productReducer';\nimport { categoryListSelectors } from '../../features/categoryList/categoryListReducer';\nimport { categorySelectors } from '../../features/category/categoryReducer';\nimport { signUpSelectors } from '../../features/signUp/signUpReducer';\n\nconst StyledLinearProgress = styled(LinearProgress)`\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 4px;\n  z-index: 10000;\n`;\n\nexport const ProgressBar: React.FC = () => {\n  const authIsLoading = useAppSelector(authSelectors.getIsLoading);\n  const authIsLoadingUserData = useAppSelector(\n    authSelectors.getIsLoadingUserData,\n  );\n  const productList = useAppSelector(productListSelectors.getIsLoading);\n  const product = useAppSelector(productSelectors.getIsLoading);\n  const categoryList = useAppSelector(categoryListSelectors.getIsLoading);\n  const category = useAppSelector(categorySelectors.getIsLoading);\n  const signUp = useAppSelector(signUpSelectors.getIsLoading);\n\n  const isProgress =\n    authIsLoading ||\n    authIsLoadingUserData ||\n    productList ||\n    product ||\n    categoryList ||\n    category ||\n    signUp;\n\n  return isProgress ? <StyledLinearProgress /> : null;\n};\n","import React from 'react';\nimport { BrightnessHigh, BrightnessLow } from '@material-ui/icons';\nimport styled from 'styled-components';\nimport { Box, Button, Typography } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { appActions, appSelectors } from '../../store/app';\n\nexport const ThemeModeSwitcher: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const isDarkMode = useAppSelector(appSelectors.getIsDarkMode);\n\n  const handleTestBtnClk = () => {\n    dispatch(appActions.toggleDarkMode());\n  };\n\n  return (\n    <Wrap>\n      <StyledButton type=\"button\" onClick={handleTestBtnClk}>\n        <Typography>\n          {isDarkMode ? (\n            <BrightnessLow color={'inherit'} />\n          ) : (\n            <BrightnessHigh color={'inherit'} />\n          )}\n        </Typography>\n      </StyledButton>\n    </Wrap>\n  );\n};\n\nconst StyledButton = styled(Button)`\n  min-width: 40px;\n  min-height: 40px;\n`;\n\nconst Wrap = styled(Box)``;\n","import React, { useState } from 'react';\nimport { Box, Button, Menu, MenuItem } from '@material-ui/core';\nimport PersonIcon from '@material-ui/icons/Person';\nimport styled from 'styled-components';\nimport { authSelectors, authWorkers } from '../../store/auth';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\n\nexport const UserComponent: React.FC = () => {\n  const [anchorEl, setAnchorEl] = useState<HTMLButtonElement | null>(null);\n  const userData = useAppSelector(authSelectors.getUserData);\n  const dispatch = useAppDispatch();\n  const t = useAppTranslation();\n\n  const handleLogout = () => {\n    dispatch(authWorkers.authSignOut());\n  };\n\n  const handleMenuBtnClk = (e: React.SyntheticEvent<HTMLButtonElement>) => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n  };\n\n  return userData ? (\n    <Wrap>\n      <StyledButton\n        onClick={handleMenuBtnClk}\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n      >\n        <PersonIcon />\n      </StyledButton>\n      <StyledMenu\n        id=\"customized-menu\"\n        open={Boolean(anchorEl)}\n        keepMounted\n        anchorEl={anchorEl}\n        onClose={handleMenuClose}\n        variant={'selectedMenu'}\n      >\n        <MenuItem button={false} style={{ outline: 'none' }}>\n          <UserDataBox>\n            <Box>{`${t('app__user__user-id')}: ${userData.id}`}</Box>\n            <Box>{`${t('app__user__user-email')}: ${userData.email}`}</Box>\n            <Box>{`${t('app__user__user-name')}: ${userData.name}`}</Box>\n          </UserDataBox>\n        </MenuItem>\n        <MenuItem onClick={handleLogout}>\n          {t('app__user__user-logout-btn')}\n        </MenuItem>\n      </StyledMenu>\n    </Wrap>\n  ) : null;\n};\n\nconst Wrap = styled(Box)``;\n\nconst UserDataBox = styled(Box)`\n  min-width: 200px;\n  min-height: 100px;\n`;\n\nconst StyledMenu = styled(Menu)``;\n\nconst StyledButton = styled(Button)`\n  min-width: 40px;\n  min-height: 40px;\n`;\n","import React from 'react';\nimport { useAppSelector } from '../../store/hooks';\nimport { authSelectors } from '../../store/auth';\nimport { UserComponent } from './UserComponent';\n\nexport const User: React.FC = () => {\n  const isAuthenticated = useAppSelector(authSelectors.getIsAuthenticated);\n\n  return isAuthenticated ? <UserComponent /> : null;\n};\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport { ru } from './ru';\nimport { en } from './en';\n\nexport const LANG_EN = 'en';\nexport const LANG_RU = 'ru';\n\n// the translations\nconst resources = {\n  en: {\n    translation: {\n      ...en,\n    },\n  },\n  ru: {\n    translation: {\n      ...ru,\n    },\n  },\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    resources,\n    lng: LANG_RU,\n\n    keySeparator: false, // we do not use keys in form messages.welcome\n\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\n//убираем для больших проектов\n// declare module 'react-i18next' {\n//   type CustomResources = typeof resources['en'];\n//   interface Resources extends CustomResources {}\n// }\n\nexport default i18n;\n","//\n\nexport const en = {\n  test: 'TEST',\n  //nav-link\n  'nav-link__home': 'Home',\n  'nav-link__product-list': 'Product list',\n  'nav-link__category-list': 'Category list',\n  //app__user\n  'app__user__user-id': 'ID',\n  'app__user__user-email': 'Email',\n  'app__user__user-name': 'Name',\n  'app__user__user-logout-btn': 'Logout',\n  //app__footer\n  'app__footer__copyright-msg1': 'Copyright © {{year}} cool29horhoj',\n  'app__footer__copyright-msg2': 'All rights reserved.',\n  //requestErrorView\n  'app__request-error-view__title': 'Request execution error',\n  'app__request-error-view__error__invalid-credentials': 'Invalid credentials',\n  'app__request-error-view__error__failed-to-get-a-response-from-the-server':\n    'Failed to get a response from the server',\n  'app__request-error-view__error__unknown-error-with-code':\n    'Unknown error with code {{code}}',\n  'app__request-error-view__error__resource-not-found': 'Resource not found',\n  // ActionRowPanelDefault\n  'component__action-row-panel-default__delete-request-message': 'Delete ?',\n  //validation\n  validation__min_x_symbol: 'min {{x}} symbol',\n  validation__max_x_symbol: 'max {{x}} symbol',\n  validation__required: 'is a required field',\n  validation__email: 'not email',\n  //actions\n  'action__sign-out': 'You have successfully logged out',\n  //sign-in\n  'page__sign-in__page-title': 'Sign in',\n  'page__sign-in__form-label__email': 'email',\n  'page__sign-in__form-label__password': 'password',\n  'page__sign-in__form-label__submit-btn': 'SIGN IN',\n  'page__sign-in__msg__successfully-logged-in':\n    'You are successfully logged in',\n  'page__sign-in__msg__login-failed': 'Login failed',\n  'page__sign-in__sign-up-link': 'Sign-up',\n  //sign-up\n  'page__sign-up__page-title': 'Sign-up',\n  'page__sign-up__form-label__name': 'name',\n  'page__sign-up__form-label__email': 'email',\n  'page__sign-up__form-label__password': 'password',\n  'page__sign-up__form-label__password-confirm': 'password confirm',\n  'page__sign-up__form-label__submit-btn': 'SIGN UP',\n  'page__sign-up__sign-in-link': 'Sign in',\n  'page__sign-up__validation-name': 'The name must contain only letters',\n  'page__sign-up__validation-password-confirm':\n    'Password and password confirmation must match',\n  'page__sign-up__request-error-status-422':\n    'Failed to create user with specified data',\n  'page__sign-up__add-user-success':\n    'You have successfully added a user: {{name}}!',\n  'page__sign-up__add-user-error': 'You have failed added a user: {{name}}!',\n  //productListForm\n  'features__product-list-form__data-grid-column__id': 'ID',\n  'features__product-list-form__data-grid-column__title': 'Title',\n  'features__product-list-form__data-grid-column__description': 'Description',\n  'features__product-list-form__data-grid-column__options': 'Options',\n  'features__product-list-form__search-placeholder': 'search',\n  'features__product-list-form__action-column-title': 'Actions',\n  'features__product-list-form__page-title': 'Product list',\n  'features__product-list-form__search-not-found-msg': 'Nothing found',\n  'features__product-list-form__msg-successfully-deleted-product':\n    'You have successfully deleted the item',\n  //productForm\n  'features__product-form__input-label-title': 'Title',\n  'features__product-form__input-label-description': 'Description',\n  'features__product-form__input-label-options': 'Option',\n  'features__product-form__button-title-save': 'Save',\n  'features__product-form__button-title-previous': 'Previous',\n  'features__product-form__page-edit-title': 'Edit product with ID=\"{{id}}\"',\n  'features__product-form__page-new-title': 'Add new product',\n  'features__product-form__category-list-subform__action-column-title':\n    'Actions',\n  'features__product-form__category-list-subform__search-placeholder': 'Search',\n  'features__product-form__category-list-subform__search-not-found-msg':\n    'Nothing found',\n  'features__product-form__category-list-subform__title':\n    'Categories that this product belongs to',\n  'features__product-form__category-list-subform__msg-category-already-been-selected':\n    'This category has already been selected',\n  'features__product-form__msg-product-update':\n    'You have successfully updated the product data with ID=\"{{id}}\"',\n  'features__product-form__msg-product-add':\n    'You have successfully added a new product',\n\n  //categoryListForm\n  'features__category-list-form__page-title': 'Category list',\n  'features__category-list-form__data-grid-column__id': 'ID',\n  'features__category-list-form__data-grid-column__title': 'Title',\n  'features__category-list-form__data-grid-column__description': 'Description',\n  'features__category-list-form__search-placeholder': 'search',\n  'features__category-list-form__action-column-title': 'Actions',\n  'features__category-list-form__search-not-found-msg': 'Nothing found',\n  'features__category-list-form__msg-successfully-deleted-category':\n    'You have successfully deleted the item',\n  //categoryForm\n  'features__category-form__input-label-title': 'Title',\n  'features__category-form__input-label-description': 'Description',\n  'features__category-form__input-label-options': 'Option',\n  'features__category-form__button-title-save': 'Save',\n  'features__category-form__button-title-previous': 'Previous',\n  'features__category-form__page-edit-title': 'Edit category with ID=\"{{id}}\"',\n  'features__category-form__page-new-title': 'Add new category',\n  'features__category-form__msg-category-update':\n    'You have successfully updated the category data with ID=\"{{id}}\"',\n  'features__category-form__msg-category-add':\n    'You have successfully added a new category',\n};\n","import { en } from './en';\n\nexport const ru: typeof en = {\n  test: 'ТЕСТ',\n  //nav-link\n  'nav-link__home': 'Главная',\n  'nav-link__product-list': 'Список товаров',\n  'nav-link__category-list': 'Список категорий',\n  //app__user\n  'app__user__user-id': 'ИД',\n  'app__user__user-email': 'Почта',\n  'app__user__user-name': 'Имя',\n  'app__user__user-logout-btn': 'Выйти',\n  //app__footer\n  'app__footer__copyright-msg1': 'Авторское право © {{year}} cool29horhoj.',\n  'app__footer__copyright-msg2': 'Все права защищены.',\n  //requestErrorView\n  'app__request-error-view__title': 'Ошибка выполнения запроса',\n  'app__request-error-view__error__invalid-credentials':\n    'Неверные учетные данные',\n  'app__request-error-view__error__failed-to-get-a-response-from-the-server':\n    'Ошибка получения ответа от сервера',\n  'app__request-error-view__error__unknown-error-with-code':\n    'Неизвестная ошибка с кодом {{code}}',\n  'app__request-error-view__error__resource-not-found': 'Ресурс не существует',\n  // ActionRowPanelDefault\n  'component__action-row-panel-default__delete-request-message': 'Удалить ?',\n  //validation\n  validation__min_x_symbol: 'минимум {{x}} символов',\n  validation__max_x_symbol: 'максимум {{x}} символов',\n  validation__required: 'обязательно для заполнения',\n  validation__email: 'не почта',\n  //actions\n  'action__sign-out': 'Вы успешно вышли из системы',\n  //sign-in\n  'page__sign-in__page-title': 'Вход',\n  'page__sign-in__form-label__email': 'Почта',\n  'page__sign-in__form-label__password': 'Пароль',\n  'page__sign-in__form-label__submit-btn': 'ВОЙТИ',\n  'page__sign-in__msg__successfully-logged-in': 'Вы успешно вошли в систему',\n  'page__sign-in__msg__login-failed': 'Не удалось войти в систему',\n  //sign-up\n  'page__sign-up__page-title': 'Регистрация',\n  'page__sign-up__form-label__name': 'имя',\n  'page__sign-up__form-label__email': 'почта',\n  'page__sign-up__form-label__password': 'пароль',\n  'page__sign-up__form-label__password-confirm': 'подтверждение пароля',\n  'page__sign-up__form-label__submit-btn': 'ЗАРЕГИСТРИРОВАТЬ',\n  'page__sign-up__sign-in-link': 'Войти',\n  'page__sign-up__validation-name': 'Имя должно содержать только буквы',\n  'page__sign-up__validation-password-confirm':\n    'Пароль и подтверждение пароля должны совпадать',\n  'page__sign-up__request-error-status-422':\n    'Не удалось создать пользователя с указанными данными',\n  'page__sign-up__add-user-success':\n    'Вы успешно добавили пользователя: {{name}}!',\n  'page__sign-up__add-user-error':\n    'Не удалось добавить пользователя: {{name}}!',\n  // productListForm\n  'features__product-list-form__data-grid-column__id': 'ИД',\n  'features__product-list-form__data-grid-column__title': 'Наименование',\n  'features__product-list-form__data-grid-column__description': 'Описание',\n  'features__product-list-form__data-grid-column__options': 'Опции',\n  'features__product-list-form__search-placeholder': 'найти',\n  'features__product-list-form__action-column-title': 'Действия',\n  'features__product-list-form__page-title': 'Список товаров',\n  'features__product-list-form__search-not-found-msg': 'Ничего не найдено',\n  'features__product-list-form__msg-successfully-deleted-product':\n    'Вы успешно удалили товар',\n  //productForm\n  'features__product-form__input-label-title': 'Наименование',\n  'features__product-form__input-label-description': 'Описание',\n  'features__product-form__input-label-options': 'Опции',\n  'features__product-form__button-title-save': 'Сохранить',\n  'features__product-form__button-title-previous': 'Назад',\n  'features__product-form__page-edit-title':\n    'Редактируется товар с ИД=\"{{id}}\"',\n  'features__product-form__page-new-title': 'Добавить новый товар',\n  'features__product-form__category-list-subform__action-column-title':\n    'Действия',\n  'features__product-form__category-list-subform__search-placeholder': 'Найти',\n  'features__product-form__category-list-subform__search-not-found-msg':\n    'Ничего не найдено',\n  'features__product-form__category-list-subform__title':\n    'Категории, к которым принадлежит этот продукт',\n  'features__product-form__category-list-subform__msg-category-already-been-selected':\n    'Данная категория уже выбрана',\n  'features__product-form__msg-product-update':\n    'Вы успешно обновили данные по товару c ИД=\"{{id}}\"',\n  'features__product-form__msg-product-add': 'Вы успешно добавили новый товар',\n  'page__sign-in__sign-up-link': 'Зарегистрироваться',\n\n  //categoryListForm\n  'features__category-list-form__page-title': 'Список категорий',\n  'features__category-list-form__data-grid-column__id': 'ИД',\n  'features__category-list-form__data-grid-column__title': 'Наименование',\n  'features__category-list-form__data-grid-column__description': 'Описание',\n  'features__category-list-form__search-placeholder': 'найти',\n  'features__category-list-form__action-column-title': 'Действия',\n  'features__category-list-form__search-not-found-msg': 'Ничего не найдено',\n  'features__category-list-form__msg-successfully-deleted-category':\n    'Вы успешно удалили товар категорию',\n  //categoryForm\n  'features__category-form__input-label-title': 'Наименование',\n  'features__category-form__input-label-description': 'Описание',\n  'features__category-form__input-label-options': 'Опции',\n  'features__category-form__button-title-save': 'Сохранить',\n  'features__category-form__button-title-previous': 'Назад',\n  'features__category-form__page-edit-title':\n    'Редактируется категория с ИД=\"{{id}}\"',\n  'features__category-form__page-new-title': 'Добавить новую категорию',\n  'features__category-form__msg-category-update':\n    'Вы успешно обновили данные по категории c ИД=\"{{id}}\"',\n  'features__category-form__msg-category-add':\n    'Вы успешно добавили новую категорию',\n};\n","import React from 'react';\nimport { Box, MenuItem, Select } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { useTranslation } from 'react-i18next';\nimport { LANG_EN, LANG_RU } from '../../i18n';\n\nexport const LangSwitcher: React.FC = () => {\n  const { i18n } = useTranslation();\n  const handleChange = (e: React.ChangeEvent<{ value: unknown }>) => {\n    i18n.changeLanguage(e.target.value as string);\n  };\n\n  return (\n    <Wrap>\n      <StyledSelect value={i18n.language} onChange={handleChange}>\n        <MenuItem value={LANG_RU}>РУС</MenuItem>\n        <MenuItem value={LANG_EN}>ENG</MenuItem>\n      </StyledSelect>\n    </Wrap>\n  );\n};\n\nconst StyledSelect = styled(Select)``;\n\nconst Wrap = styled(Box)`\n  padding: 0 10px;\n`;\n","import React from 'react';\nimport { Box, Button } from '@material-ui/core';\nimport styled from 'styled-components';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { authSelectors } from '../../store/auth';\nimport { appActions } from '../../store/app';\n\nexport const MenuBtn: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const isAuthenticated = useAppSelector(authSelectors.getIsAuthenticated);\n\n  const handleMenuBtnClk = () => {\n    dispatch(appActions.toggleMenuMode());\n  };\n  return isAuthenticated ? (\n    <Wrap>\n      <StyledButton onClick={handleMenuBtnClk}>\n        <MenuIcon />\n      </StyledButton>\n    </Wrap>\n  ) : null;\n};\n\nexport const Wrap = styled(Box)``;\n\nexport const StyledButton = styled(Button)`\n  min-width: 40px;\n  min-height: 40px;\n`;\n","import React from 'react';\nimport { AppBar, Box, Toolbar } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { ThemeModeSwitcher } from '../ThemeModeSwitcher';\nimport { User } from '../User';\nimport { LangSwitcher } from '../LangSwitcher';\nimport { MenuBtn } from '../MenuBtn';\n\nexport const AppHeader: React.FC = () => {\n  return (\n    <AppBar position=\"static\" color={'inherit'}>\n      <StyledToolBar>\n        <LeftWrap>\n          <MenuBtn />\n        </LeftWrap>\n        <RightWrap>\n          <User />\n          <ThemeModeSwitcher />\n          <LangSwitcher />\n        </RightWrap>\n      </StyledToolBar>\n    </AppBar>\n  );\n};\n\nconst StyledToolBar = styled(Toolbar)`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst RightWrap = styled(Box)`\n  display: flex;\n  justify-content: center;\n  align-content: center;\n`;\n\nconst LeftWrap = styled(Box)``;\n","import React from 'react';\nimport { AppBar, Toolbar, Typography } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\n\nexport const AppFooter: React.FC = () => {\n  const t = useAppTranslation();\n\n  return (\n    <StyledAppBar position=\"static\" color={'inherit'}>\n      <StyledToolBar>\n        <Typography noWrap={true}>\n          {t('app__footer__copyright-msg1', {\n            year: new Date().getFullYear().toString(),\n          })}\n          &nbsp;\n        </Typography>\n        <Typography noWrap={true}>\n          {t('app__footer__copyright-msg2')}\n        </Typography>\n      </StyledToolBar>\n    </StyledAppBar>\n  );\n};\n\nconst StyledToolBar = styled(Toolbar)`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\n\nconst StyledAppBar = styled(AppBar)``;\n","import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  \n  }\n  \n  body {\n    min-width: 360px;\n  }\n`;\n","import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport { ListItem, ListItemIcon, ListItemText, Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { useAppDispatch, useAppSelector } from '../../../store/hooks';\nimport { appActions, appSelectors } from '../../../store/app';\nimport { NavLinkProps } from './types';\n\nexport const NavLink: React.FC<NavLinkProps> = ({\n  to,\n  icon,\n  primary,\n  secondary = null,\n}) => {\n  const dispatch = useAppDispatch();\n\n  const isSmallWidth = useAppSelector(appSelectors.getIsSmallWidth);\n\n  const handleLinkClk = () => {\n    if (isSmallWidth) {\n      dispatch(appActions.setIsOpenMenu(false));\n    }\n  };\n\n  return (\n    <li>\n      <StyledListItem\n        button\n        component={RouterLink}\n        to={to}\n        onClick={handleLinkClk}\n      >\n        <StyledListItemIcon>{icon}</StyledListItemIcon>\n        <ListItemText\n          primary={primary}\n          className={'link-text'}\n          secondary={secondary}\n        />\n      </StyledListItem>\n    </li>\n  );\n};\n\nconst StyledListItem: typeof ListItem = styled(ListItem)`\n  &.active svg,\n  &.active .link-text {\n    color: ${({ theme }) => (theme as Theme).palette.primary.main};\n  }\n  &.active .link-text > span {\n    font-weight: 700;\n    font-size: 130%;\n  }\n`;\n\nconst StyledListItemIcon = styled(ListItemIcon)`\n  min-width: 40px;\n`;\n","import { List } from '@material-ui/core';\nimport React from 'react';\nimport styled from 'styled-components';\nimport HomeIcon from '@material-ui/icons/Home';\nimport DevicesOtherIcon from '@material-ui/icons/DevicesOther';\nimport CategoryIcon from '@material-ui/icons/Category';\nimport { getPathByName } from '../../router';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\nimport { NavLink } from './NavLink';\n\nexport const AppNav: React.FC = () => {\n  const t = useAppTranslation();\n\n  return (\n    <StyledList component=\"nav\">\n      <NavLink\n        to={getPathByName('home')}\n        icon={<HomeIcon />}\n        primary={t('nav-link__home')}\n      />\n      <NavLink\n        to={getPathByName('productList')}\n        icon={<DevicesOtherIcon />}\n        primary={t('nav-link__product-list')}\n      />\n      <NavLink\n        to={getPathByName('categoryList')}\n        icon={<CategoryIcon />}\n        primary={t('nav-link__category-list')}\n      />\n    </StyledList>\n  );\n};\n\nconst StyledList: typeof List = styled(List)`\n  width: 100%;\n`;\n","import React from 'react';\nimport { Box, Drawer, Paper, Theme } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { AppNav } from '../AppNav';\nimport { useAppDispatch, useAppSelector } from '../../store/hooks';\nimport { appActions, appSelectors } from '../../store/app';\nimport { MenuBtn } from '../MenuBtn';\nimport { LEFT_MENU_WIDTH } from '../../config/config';\n\nexport const NavBlock: React.FC = () => {\n  const isOpenMenu = useAppSelector(appSelectors.getIsOpenMenu);\n  const dispatch = useAppDispatch();\n  const isSmallWidth = useAppSelector(appSelectors.getIsSmallWidth);\n\n  const handleDrawerClose = () => {\n    dispatch(appActions.setIsOpenMenu(false));\n  };\n\n  const navBig = () => (\n    <NavBigWrap show={isOpenMenu}>\n      <NavWrap>\n        <StyledPaper square={true}>\n          <AppNav />\n        </StyledPaper>\n      </NavWrap>\n    </NavBigWrap>\n  );\n\n  const navSmall = () => (\n    <Drawer\n      open={isOpenMenu}\n      onClose={handleDrawerClose}\n      transitionDuration={300}\n    >\n      <DrawerInternalWrap>\n        <MenuBtn />\n      </DrawerInternalWrap>\n      <NavWrap>\n        <StyledBox>\n          <AppNav />\n        </StyledBox>\n      </NavWrap>\n    </Drawer>\n  );\n\n  return isSmallWidth ? navSmall() : navBig();\n};\n\nconst StyledPaper = styled(Paper)`\n  padding: ${({ theme }) => (theme as Theme).spacing(1)}px;\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst StyledBox = styled(Box)`\n  padding: ${({ theme }) => (theme as Theme).spacing(1)}px;\n  display: flex;\n  flex-grow: 1;\n`;\n\nconst NavBigWrap = styled.div<{ show: boolean }>`\n  display: flex;\n  margin-left: ${({ show }) => (show ? '0' : `${-LEFT_MENU_WIDTH}px`)};\n  visibility: ${({ show }) => (show ? 'visible' : 'hidden')};\n  transition: margin-left 0.3s ease, visibility 0.4s ease;\n`;\n\nconst NavWrap = styled(Box)`\n  width: ${LEFT_MENU_WIDTH}px;\n  display: flex;\n  flex-grow: 1;\n  padding: ${({ theme }) => (theme as Theme).spacing(1, 1, 1, 0)};\n`;\n\nconst DrawerInternalWrap = styled(Box)`\n  padding: 10px 20px;\n`;\n","import React, { useEffect } from 'react';\nimport { useAppDispatch } from '../../store/hooks';\nimport { appActions } from '../../store/app';\nimport { logger } from '../../utils/logger';\n\nexport const SmallWidthChecker: React.FC = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    const handleResize = () => {\n      const innerWidthWhenSidebarIsHidden = 1100;\n      const result = window.innerWidth < innerWidthWhenSidebarIsHidden;\n      dispatch(appActions.setIsSmallWidth(result));\n      //если при изменении размера ширина экрана большая то открываем меню\n      //в противном случае закрываем\n      dispatch(appActions.setIsOpenMenu(!result));\n    };\n\n    //делаем дополнительную проверку при загрузке\n    handleResize();\n\n    window.addEventListener('resize', handleResize);\n    logger('add resize listener');\n    return () => {\n      logger('remove resize listener');\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  return null;\n};\n","import React, { useEffect } from 'react';\nimport { useSnackbar } from 'notistack';\nimport { useAppSelector } from '../../store/hooks';\nimport { useAppTranslation } from '../../i18n/useAppTranslation';\nimport { appSelectors } from '../../store/app';\n\nexport const FlashMessagesPresenter: React.FC = () => {\n  const lastFlashMessage = useAppSelector(appSelectors.getLastFlashMessage);\n\n  const { enqueueSnackbar } = useSnackbar();\n  const t = useAppTranslation();\n\n  useEffect(() => {\n    if (lastFlashMessage) {\n      const msg = t(lastFlashMessage.msg, { ...lastFlashMessage.data });\n      enqueueSnackbar(msg, {\n        variant: lastFlashMessage.type,\n        anchorOrigin: { vertical: 'bottom', horizontal: 'right' },\n      });\n    }\n  }, [lastFlashMessage]);\n\n  return null;\n};\n","import React, { useEffect } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport {\n  Box,\n  MuiThemeProvider,\n  Paper,\n  StylesProvider,\n  Theme,\n} from '@material-ui/core';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { BrowserRouter } from 'react-router-dom';\nimport { RoutesStructure } from './router';\nimport { useAppTheme } from './theme/useAppTheme';\nimport { ProgressBar } from './UI/ProgressBar';\nimport { AppHeader } from './components/AppHeader';\nimport { useAppDispatch, useAppSelector } from './store/hooks';\nimport { authSelectors, authWorkers } from './store/auth';\nimport { AppFooter } from './components/AppFooter';\nimport { GlobalStyle } from './theme/GlobalStyle';\nimport { NavBlock } from './components/NavBlock/NavBlock';\nimport { SmallWidthChecker } from './UI/SmallWidthChecker';\nimport { FlashMessagesPresenter } from './UI/FlashMessagesPresenter';\n\nexport const App: React.FC = () => {\n  const theme = useAppTheme();\n  const dispatch = useAppDispatch();\n  const isLoadingUserData = useAppSelector(authSelectors.getIsLoadingUserData);\n  const isAuthenticated = useAppSelector(authSelectors.getIsAuthenticated);\n\n  useEffect(() => {\n    dispatch(authWorkers.authGetUserData());\n  }, []);\n\n  return (\n    <>\n      <StylesProvider injectFirst>\n        <MuiThemeProvider theme={theme}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <GlobalStyle />\n            <ProgressBar />\n            <FlashMessagesPresenter />\n            <SmallWidthChecker />\n            <BrowserRouter>\n              <AppWrap>\n                <AppHeader />\n                <CenterBlock>\n                  {isAuthenticated ? <NavBlock /> : null}\n                  <Main>\n                    <StyledPaper square={true}>\n                      {isLoadingUserData ? null : <RoutesStructure />}\n                    </StyledPaper>\n                  </Main>\n                </CenterBlock>\n                <AppFooter />\n              </AppWrap>\n            </BrowserRouter>\n          </ThemeProvider>\n        </MuiThemeProvider>\n      </StylesProvider>\n    </>\n  );\n};\n\nconst AppWrap = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`;\nconst CenterBlock = styled(Box)`\n  display: flex;\n  width: 100%;\n  flex-grow: 1;\n`;\n\nconst Main = styled.main`\n  width: 100%;\n  display: flex;\n  flex-grow: 1;\n  padding: ${({ theme }) => (theme as Theme).spacing(1, 0)};\n`;\n\nconst StyledPaper = styled(Paper)`\n  padding: ${({ theme }) => (theme as Theme).spacing(1)}px;\n  width: 100%;\n`;\n","import React, { useEffect } from 'react';\nimport { createTheme, Theme, useMediaQuery, colors } from '@material-ui/core';\nimport { useAppDispatch, useAppSelector } from '../store/hooks';\nimport { appActions, appSelectors } from '../store/app';\n\nexport const useAppTheme = (): Theme => {\n  const isDarkMode = useAppSelector(appSelectors.getIsDarkMode);\n  // Если надо что бы зависело также от системной темы\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(appActions.setIsDarkMode(prefersDarkMode));\n  }, [prefersDarkMode]);\n\n  return React.useMemo(\n    () =>\n      createTheme({\n        palette: {\n          type: isDarkMode ? 'dark' : 'light',\n          primary: isDarkMode ? colors.deepOrange : colors.deepPurple,\n        },\n      }),\n    [isDarkMode],\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { SnackbarProvider } from 'notistack';\nimport { store } from './store';\nimport { App } from './App';\nimport './i18n';\nimport { isStrictMode, SNACKBAR_PROVIDER_MAX_SNACK } from './config/config';\n\nconst Core: React.FC = () => {\n  const appCore = (\n    <Provider store={store}>\n      <SnackbarProvider maxSnack={SNACKBAR_PROVIDER_MAX_SNACK}>\n        <App />\n      </SnackbarProvider>\n    </Provider>\n  );\n\n  return isStrictMode ? (\n    <React.StrictMode>{appCore}</React.StrictMode>\n  ) : (\n    <>{appCore}</>\n  );\n};\n\nReactDOM.render(<Core />, document.getElementById('root'));\n"],"sourceRoot":""}